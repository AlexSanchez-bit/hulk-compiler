>>> Building Lexer...
>>> Tokenizing..
 let a = 0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
let a = 0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 a = 0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
a = 0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 = 0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
= 0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
0, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
, c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
c = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 = 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
= 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
2 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
in
                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       

                let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
let b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
b = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 = 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
= 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
1 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 , x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
, x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
x =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
 =2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
=2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
2+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
+5-(3*9) in {
                    print(a);
                    print(b);
                };
       
5-(3*9) in {
                    print(a);
                    print(b);
                };
       
-(3*9) in {
                    print(a);
                    print(b);
                };
       
(3*9) in {
                    print(a);
                    print(b);
                };
       
3*9) in {
                    print(a);
                    print(b);
                };
       
*9) in {
                    print(a);
                    print(b);
                };
       
9) in {
                    print(a);
                    print(b);
                };
       
) in {
                    print(a);
                    print(b);
                };
       
 in {
                    print(a);
                    print(b);
                };
       
in {
                    print(a);
                    print(b);
                };
       
 {
                    print(a);
                    print(b);
                };
       
{
                    print(a);
                    print(b);
                };
       

                    print(a);
                    print(b);
                };
       
print(a);
                    print(b);
                };
       
(a);
                    print(b);
                };
       
a);
                    print(b);
                };
       
);
                    print(b);
                };
       
;
                    print(b);
                };
       

                    print(b);
                };
       
print(b);
                };
       
(b);
                };
       
b);
                };
       
);
                };
       
;
                };
       

                };
       
};
       
;
       

       
>>> Cleaning tokens...
>>> Done !
['let', 'a', '=', '0', ',', 'c', '=', '2', 'in', 'let', 'b', '=', '1', ',', 'x', '=', '2', '+', '5', '-', '(', '3', '*', '9', ')', 'in', '{', 'print', '(', 'a', ')', ';', 'print', '(', 'b', ')', ';', '}', ';', '$']
['let', 'ID', '=', 'number', ',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
>>> Parsing...
0 	 <expression> -> .<aritmetic-operation>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression><else-statement>, {';'}
	 <inst-list> -> .<inst>;, {'$'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <scope> -> .{}, {';'}
	 <inst> -> .<expression>, {';'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 S' -> .<program>, {'$'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>, {';', '+', '-'}
	 <flux-control> -> .<for-loop>, {';'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <scope> -> .{<inst-list>}, {';'}
	 <conditional> -> .<full-conditional>, {';'}
	 <for-loop> -> .for(ID<iterable-expression>)<scope>, {';'}
	 <inst-list> -> .<inst>;<inst-list>, {'$'}
	 <program> -> .<inst-list>, {'$'}
	 <inst> -> .<var-asign>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'}
	 <conditional> -> .<inline-conditional>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}, {';'}
	 <var-asign> -> .ID:=<expression>, {';'}
	 <var-dec> -> .let<vat-init-list>in<var-decl-expr>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <flux-control> -> .<conditional>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression>, {';'}
	 <inst> -> .<var-dec>, {';'}
	 <flux-control> -> .<while-loop>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <inst> -> .<scope>, {';'}
	 <inst> -> .<flux-control>, {';'}
	 <while-loop> -> .while(<conditional-expresssion>)<scope>, {';'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'} 

1 	 <while-loop> -> while.(<conditional-expresssion>)<scope>, {';'} 

2 	 <conditional-expresssion> -> .<condition>, {')'}
	 <while-loop> -> while(.<conditional-expresssion>)<scope>, {';'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression><<expression>, {'|', '&', ')'}
	 <conditional-expresssion> -> .!<condition>, {')'}
	 <conditional-expresssion> -> .<condition>&<conditional-expresssion>, {')'}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .<boolean-value>, {'|', '&', ')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>=<<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>>=<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>==<expression>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <boolean-value> -> .false, {'|', '&', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>><expression>, {'|', '&', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', '==', '!='}
	 <conditional-expresssion> -> .<condition>|<conditional-expresssion>, {')'}
	 <boolean-value> -> .true, {'|', '&', ')'}
	 <condition> -> .<comparation>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>!=<expression>, {'|', '&', ')'} 

3 	 <function-call> -> ID.(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <function-call> -> ID.(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> ID., {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

4 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <param-list> -> .<expression>, {')'}
	 <function-call> -> ID(.), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <function-call> -> ID(.<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

5 	 <function-call> -> ID.(), {',', '+', '-', '*', '/', ')'}
	 <atom> -> ID., {',', '+', '-', '*', '/', ')'}
	 <function-call> -> ID.(<param-list>), {'+', ',', '-', '*', '/', ')'} 

6 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <param-list> -> .<expression>, {')'}
	 <function-call> -> ID(.<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <function-call> -> ID(.), {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

7 	 <atom> -> number., {',', '+', '-', '*', '/', ')'} 

8 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <atom> -> (.<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

9 	 <function-call> -> ID.(), {'+', '-', '*', '/', ')'}
	 <atom> -> ID., {'+', '-', '*', '/', ')'}
	 <function-call> -> ID.(<param-list>), {'+', '-', '*', '/', ')'} 

10 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <function-call> -> ID(.), {'+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <function-call> -> ID(.<param-list>), {'+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

11 	 <function-call> -> ID()., {'+', '-', '*', '/', ')'} 

12 	 <param-list> -> <expression>.,<param-list>, {')'}
	 <param-list> -> <expression>., {')'} 

13 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <param-list> -> .<expression>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> <expression>,.<param-list>, {')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

14 	 <expression> -> <aritmetic-operation>., {',', ')'} 

15 	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> <factor>., {',', ')'} 

16 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {',', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <factor> -> .<atom>/<factor>, {',', '+', '-', ')'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'} 

17 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {',', ')'} 

18 	 <factor> -> <atom>.*<factor>, {',', '+', ')', '-'}
	 <factor> -> <atom>., {',', '+', ')', '-'}
	 <factor> -> <atom>./<factor>, {',', '+', ')', '-'} 

19 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {',', '+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <factor> -> <atom>*.<factor>, {',', '+', ')', '-'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'} 

20 	 <factor> -> <atom>*<factor>., {',', '+', ')', '-'} 

21 	 <atom> -> <function-call>., {',', '+', '-', '*', '/', ')'} 

22 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {',', '+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <factor> -> <atom>/.<factor>, {',', '+', ')', '-'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'} 

23 	 <factor> -> <atom>/<factor>., {',', '+', ')', '-'} 

24 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {',', ')'}
	 <factor> -> .<atom>/<factor>, {',', '+', '-', ')'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'} 

25 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {',', ')'} 

26 	 <param-list> -> <expression>,<param-list>., {')'} 

27 	 <function-call> -> ID(<param-list>.), {'+', '-', '*', '/', ')'} 

28 	 <function-call> -> ID(<param-list>)., {'+', '-', '*', '/', ')'} 

29 	 <atom> -> number., {'+', '-', '*', '/', ')'} 

30 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> (.<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

31 	 <atom> -> (<aritmetic-operation>.), {'+', '-', '*', '/', ')'} 

32 	 <atom> -> (<aritmetic-operation>)., {'+', '-', '*', '/', ')'} 

33 	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> <factor>., {')'} 

34 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

35 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {')'} 

36 	 <factor> -> <atom>., {'+', ')', '-'}
	 <factor> -> <atom>./<factor>, {'+', ')', '-'}
	 <factor> -> <atom>.*<factor>, {'+', ')', '-'} 

37 	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <factor> -> <atom>*.<factor>, {'+', ')', '-'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

38 	 <factor> -> <atom>*<factor>., {'+', ')', '-'} 

39 	 <atom> -> <function-call>., {'+', '-', '*', '/', ')'} 

40 	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <factor> -> <atom>/.<factor>, {'+', ')', '-'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

41 	 <factor> -> <atom>/<factor>., {'+', ')', '-'} 

42 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

43 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {')'} 

44 	 <atom> -> (<aritmetic-operation>.), {',', '+', '-', '*', '/', ')'} 

45 	 <atom> -> (<aritmetic-operation>)., {',', '+', '-', '*', '/', ')'} 

46 	 <function-call> -> ID()., {',', '+', '-', '*', '/', ')'} 

47 	 <function-call> -> ID(<param-list>.), {'+', ',', '-', '*', '/', ')'} 

48 	 <function-call> -> ID(<param-list>)., {'+', ',', '-', '*', '/', ')'} 

49 	 <function-call> -> ID()., {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

50 	 <function-call> -> ID(<param-list>.), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

51 	 <function-call> -> ID(<param-list>)., {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

52 	 <atom> -> number., {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

53 	 <conditional-expresssion> -> .<condition>, {')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <comparation> -> .<expression><<expression>, {'|', '&', ')'}
	 <conditional-expresssion> -> .!<condition>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <atom> -> .ID, {'!=', '+', '-', '*', '>', '<', '/', '>=', '=<', '==', ')'}
	 <conditional-expresssion> -> .<condition>&<conditional-expresssion>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <condition> -> .<boolean-value>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', ')', '==', '!='}
	 <condition> -> (.<conditional-expresssion>), {'|', '&', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <comparation> -> .<expression>=<<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>>=<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>==<expression>, {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <boolean-value> -> .false, {'|', '&', ')'}
	 <comparation> -> .<expression>><expression>, {'|', '&', ')'}
	 <atom> -> (.<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <factor> -> .<atom>/<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <conditional-expresssion> -> .<condition>|<conditional-expresssion>, {')'}
	 <boolean-value> -> .true, {'|', '&', ')'}
	 <condition> -> .<comparation>, {'|', '&', ')'}
	 <factor> -> .<atom>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <comparation> -> .<expression>!=<expression>, {'|', '&', ')'}
	 <factor> -> .<atom>*<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'} 

54 	 <function-call> -> ID.(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> ID., {'!=', '+', '-', '*', '>', '<', '/', '>=', '=<', '==', ')'}
	 <function-call> -> ID.(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

55 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <param-list> -> .<expression>, {')'}
	 <function-call> -> ID(.), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <function-call> -> ID(.<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

56 	 <function-call> -> ID()., {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

57 	 <function-call> -> ID(<param-list>.), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

58 	 <function-call> -> ID(<param-list>)., {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

59 	 <atom> -> number., {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

60 	 <conditional-expresssion> -> .<condition>, {')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <comparation> -> .<expression><<expression>, {'|', '&', ')'}
	 <conditional-expresssion> -> .!<condition>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <atom> -> .ID, {'!=', '+', '-', '*', '>', '<', '/', '>=', '=<', '==', ')'}
	 <conditional-expresssion> -> .<condition>&<conditional-expresssion>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <condition> -> .<boolean-value>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', ')', '==', '!='}
	 <condition> -> (.<conditional-expresssion>), {'|', '&', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> (.<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', ')', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <comparation> -> .<expression>=<<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>>=<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>==<expression>, {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <boolean-value> -> .false, {'|', '&', ')'}
	 <comparation> -> .<expression>><expression>, {'|', '&', ')'}
	 <factor> -> .<atom>/<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <conditional-expresssion> -> .<condition>|<conditional-expresssion>, {')'}
	 <boolean-value> -> .true, {'|', '&', ')'}
	 <condition> -> .<comparation>, {'|', '&', ')'}
	 <factor> -> .<atom>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <comparation> -> .<expression>!=<expression>, {'|', '&', ')'}
	 <factor> -> .<atom>*<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'} 

61 	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <boolean-value> -> .false, {')'}
	 <comparation> -> .<expression>=<<expression>, {')'}
	 <comparation> -> .<expression>>=<expression>, {')'}
	 <comparation> -> .<expression>==<expression>, {')'}
	 <conditional-expresssion> -> !.<condition>, {')'}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>><expression>, {')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <boolean-value> -> .true, {')'}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <condition> -> .<comparation>, {')'}
	 <comparation> -> .<expression>!=<expression>, {')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <comparation> -> .<expression><<expression>, {')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .<boolean-value>, {')'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {')'} 

62 	 <condition> -> (.<conditional-expresssion>), {')'}
	 <conditional-expresssion> -> .<condition>, {')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <comparation> -> .<expression><<expression>, {'|', '&', ')'}
	 <conditional-expresssion> -> .!<condition>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <atom> -> .ID, {'!=', '+', '-', '*', '>', '<', '/', '>=', '=<', '==', ')'}
	 <conditional-expresssion> -> .<condition>&<conditional-expresssion>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <condition> -> .<boolean-value>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', ')', '==', '!='}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <comparation> -> .<expression>=<<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>>=<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>==<expression>, {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <boolean-value> -> .false, {'|', '&', ')'}
	 <comparation> -> .<expression>><expression>, {'|', '&', ')'}
	 <atom> -> (.<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <factor> -> .<atom>/<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <conditional-expresssion> -> .<condition>|<conditional-expresssion>, {')'}
	 <boolean-value> -> .true, {'|', '&', ')'}
	 <condition> -> .<comparation>, {'|', '&', ')'}
	 <factor> -> .<atom>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <comparation> -> .<expression>!=<expression>, {'|', '&', ')'}
	 <factor> -> .<atom>*<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'} 

63 	 <boolean-value> -> true., {'|', '&', ')'} 

64 	 <boolean-value> -> false., {'|', '&', ')'} 

65 	 <comparation> -> <expression>.=<<expression>, {'|', '&', ')'}
	 <comparation> -> <expression>.>=<expression>, {'|', '&', ')'}
	 <comparation> -> <expression>.==<expression>, {'|', '&', ')'}
	 <comparation> -> <expression>.><expression>, {'|', '&', ')'}
	 <comparation> -> <expression>.<<expression>, {'|', '&', ')'}
	 <comparation> -> <expression>.!=<expression>, {'|', '&', ')'} 

66 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <comparation> -> <expression>>.<expression>, {'|', '&', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

67 	 <atom> -> ID., {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> ID.(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> ID.(), {'+', '-', '*', '/', '&', '|', ')'} 

68 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <function-call> -> ID(.), {'+', '-', '*', '/', '&', '|', ')'}
	 <param-list> -> .<expression>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <function-call> -> ID(.<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

69 	 <function-call> -> ID()., {'+', '-', '*', '/', '&', '|', ')'} 

70 	 <function-call> -> ID(<param-list>.), {'+', '-', '*', '/', '&', '|', ')'} 

71 	 <function-call> -> ID(<param-list>)., {'+', '-', '*', '/', '&', '|', ')'} 

72 	 <atom> -> number., {'+', '-', '*', '/', '&', '|', ')'} 

73 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <atom> -> (.<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

74 	 <atom> -> (<aritmetic-operation>.), {'+', '-', '*', '/', '&', '|', ')'} 

75 	 <atom> -> (<aritmetic-operation>)., {'+', '-', '*', '/', '&', '|', ')'} 

76 	 <comparation> -> <expression>><expression>., {'|', '&', ')'} 

77 	 <expression> -> <aritmetic-operation>., {'|', '&', ')'} 

78 	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {'|', '&', ')'}
	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {'|', '&', ')'}
	 <aritmetic-operation> -> <factor>., {'|', '&', ')'} 

79 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

80 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {'|', '&', ')'} 

81 	 <factor> -> <atom>./<factor>, {'+', '-', '&', '|', ')'}
	 <factor> -> <atom>., {'+', '-', '&', '|', ')'}
	 <factor> -> <atom>.*<factor>, {'+', '-', '&', '|', ')'} 

82 	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> <atom>*.<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

83 	 <factor> -> <atom>*<factor>., {'+', '-', '&', '|', ')'} 

84 	 <atom> -> <function-call>., {'+', '-', '*', '/', '&', '|', ')'} 

85 	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> <atom>/.<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

86 	 <factor> -> <atom>/<factor>., {'+', '-', '&', '|', ')'} 

87 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {'|', '&', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

88 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {'|', '&', ')'} 

89 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'|', '&', ')'}
	 <comparation> -> <expression><.<expression>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

90 	 <comparation> -> <expression><<expression>., {'|', '&', ')'} 

91 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <comparation> -> <expression>>=.<expression>, {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <expression> -> .<aritmetic-operation>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

92 	 <comparation> -> <expression>>=<expression>., {'|', '&', ')'} 

93 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <comparation> -> <expression>=<.<expression>, {'|', '&', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

94 	 <comparation> -> <expression>=<<expression>., {'|', '&', ')'} 

95 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <comparation> -> <expression>==.<expression>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'} 

96 	 <comparation> -> <expression>==<expression>., {'|', '&', ')'} 

97 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'|', '&', ')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>, {'|', '&', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', '&', '|', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', '&', '|', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>, {'+', '-', '&', '|', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', '&', '|', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '&', '|', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', '&', '|', ')'}
	 <comparation> -> <expression>!=.<expression>, {'|', '&', ')'} 

98 	 <comparation> -> <expression>!=<expression>., {'|', '&', ')'} 

99 	 <expression> -> <aritmetic-operation>., {'>', '<', '>=', '=<', '==', '!='}
	 <atom> -> (<aritmetic-operation>.), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='} 

100 	 <atom> -> (<aritmetic-operation>)., {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='} 

101 	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {'>', '<', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> <factor>., {'>', '<', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {'>', '<', '>=', '=<', ')', '==', '!='} 

102 	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', ')', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', ')', '==', '!='}
	 <factor> -> .<atom>/<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', ')', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', ')', '==', '!='}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> .<function-call>, {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', ')', '==', '!='}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

103 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> (.<aritmetic-operation>), {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

104 	 <atom> -> (<aritmetic-operation>.), {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'} 

105 	 <atom> -> (<aritmetic-operation>)., {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'} 

106 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {'>', '<', '>=', '=<', ')', '==', '!='} 

107 	 <factor> -> <atom>., {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <factor> -> <atom>./<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <factor> -> <atom>.*<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'} 

108 	 <factor> -> .<atom>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <factor> -> .<atom>*<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <factor> -> .<atom>/<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <factor> -> <atom>*.<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <atom> -> .(<aritmetic-operation>), {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> .<function-call>, {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

109 	 <factor> -> <atom>*<factor>., {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'} 

110 	 <atom> -> <function-call>., {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

111 	 <factor> -> .<atom>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <factor> -> .<atom>*<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <factor> -> <atom>/.<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <factor> -> .<atom>/<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> .(<aritmetic-operation>), {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> .<function-call>, {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

112 	 <factor> -> <atom>/<factor>., {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'} 

113 	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', ')', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', ')', '==', '!='}
	 <factor> -> .<atom>/<factor>, {'!=', '+', '-', '>', '<', '>=', '=<', '==', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', ')', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', ')', '==', '!='}
	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {'!=', '>', '<', '>=', '=<', '==', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='}
	 <atom> -> .<function-call>, {'!=', '+', '-', '*', '>', '<', '>=', '/', '=<', '==', ')'}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', ')', '==', '!='}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', ')', '==', '!='} 

114 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {'>', '<', '>=', '=<', ')', '==', '!='} 

115 	 <condition> -> (<conditional-expresssion>.), {')'} 

116 	 <condition> -> (<conditional-expresssion>)., {')'} 

117 	 <conditional-expresssion> -> <condition>.&<conditional-expresssion>, {')'}
	 <conditional-expresssion> -> <condition>.|<conditional-expresssion>, {')'}
	 <conditional-expresssion> -> <condition>., {')'} 

118 	 <conditional-expresssion> -> .<condition>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression><<expression>, {'|', '&', ')'}
	 <conditional-expresssion> -> .!<condition>, {')'}
	 <conditional-expresssion> -> .<condition>&<conditional-expresssion>, {')'}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .<boolean-value>, {'|', '&', ')'}
	 <conditional-expresssion> -> <condition>&.<conditional-expresssion>, {')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>=<<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>>=<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>==<expression>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <boolean-value> -> .false, {'|', '&', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>><expression>, {'|', '&', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', '==', '!='}
	 <conditional-expresssion> -> .<condition>|<conditional-expresssion>, {')'}
	 <boolean-value> -> .true, {'|', '&', ')'}
	 <condition> -> .<comparation>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>!=<expression>, {'|', '&', ')'} 

119 	 <expression> -> <aritmetic-operation>., {'>', '<', '>=', '=<', '==', '!='} 

120 	 <aritmetic-operation> -> <factor>., {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='} 

121 	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='} 

122 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> (.<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

123 	 <atom> -> (<aritmetic-operation>.), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='} 

124 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {'>', '<', '>=', '=<', '==', '!='} 

125 	 <factor> -> <atom>.*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <factor> -> <atom>., {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <factor> -> <atom>./<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='} 

126 	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <factor> -> <atom>*.<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

127 	 <factor> -> <atom>*<factor>., {'+', '-', '>', '<', '>=', '=<', '==', '!='} 

128 	 <atom> -> <function-call>., {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

129 	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <factor> -> <atom>/.<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='} 

130 	 <factor> -> <atom>/<factor>., {'+', '-', '>', '<', '>=', '=<', '==', '!='} 

131 	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='} 

132 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {'>', '<', '>=', '=<', '==', '!='} 

133 	 <conditional-expresssion> -> <condition>&<conditional-expresssion>., {')'} 

134 	 <condition> -> <boolean-value>., {'|', '&', ')'} 

135 	 <condition> -> <comparation>., {'|', '&', ')'} 

136 	 <conditional-expresssion> -> .<condition>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression><<expression>, {'|', '&', ')'}
	 <conditional-expresssion> -> .!<condition>, {')'}
	 <conditional-expresssion> -> .<condition>&<conditional-expresssion>, {')'}
	 <conditional-expresssion> -> <condition>|.<conditional-expresssion>, {')'}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .<boolean-value>, {'|', '&', ')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>=<<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>>=<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>==<expression>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <boolean-value> -> .false, {'|', '&', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>><expression>, {'|', '&', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', '==', '!='}
	 <conditional-expresssion> -> .<condition>|<conditional-expresssion>, {')'}
	 <boolean-value> -> .true, {'|', '&', ')'}
	 <condition> -> .<comparation>, {'|', '&', ')'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>!=<expression>, {'|', '&', ')'} 

137 	 <conditional-expresssion> -> <condition>|<conditional-expresssion>., {')'} 

138 	 <boolean-value> -> true., {')'} 

139 	 <boolean-value> -> false., {')'} 

140 	 <comparation> -> <expression>.=<<expression>, {')'}
	 <comparation> -> <expression>.<<expression>, {')'}
	 <comparation> -> <expression>.>=<expression>, {')'}
	 <comparation> -> <expression>.!=<expression>, {')'}
	 <comparation> -> <expression>.==<expression>, {')'}
	 <comparation> -> <expression>.><expression>, {')'} 

141 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <comparation> -> <expression>>.<expression>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

142 	 <comparation> -> <expression>><expression>., {')'} 

143 	 <expression> -> <aritmetic-operation>., {')'} 

144 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <comparation> -> <expression><.<expression>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

145 	 <comparation> -> <expression><<expression>., {')'} 

146 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <comparation> -> <expression>>=.<expression>, {')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

147 	 <comparation> -> <expression>>=<expression>., {')'} 

148 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <comparation> -> <expression>=<.<expression>, {')'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

149 	 <comparation> -> <expression>=<<expression>., {')'} 

150 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <comparation> -> <expression>==.<expression>, {')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

151 	 <comparation> -> <expression>==<expression>., {')'} 

152 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <comparation> -> <expression>!=.<expression>, {')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

153 	 <comparation> -> <expression>!=<expression>., {')'} 

154 	 <conditional-expresssion> -> !<condition>., {')'} 

155 	 <condition> -> <boolean-value>., {')'} 

156 	 <condition> -> <comparation>., {')'} 

157 	 <expression> -> <aritmetic-operation>., {'>', '<', '>=', '=<', '==', '!='}
	 <atom> -> (<aritmetic-operation>.), {'+', '-', '*', '>', '<', '>=', '/', '=<', ')', '==', '!='} 

158 	 <condition> -> (<conditional-expresssion>.), {'|', '&', ')'} 

159 	 <condition> -> (<conditional-expresssion>)., {'|', '&', ')'} 

160 	 <while-loop> -> while(<conditional-expresssion>.)<scope>, {';'} 

161 	 <scope> -> .{<inst-list>}, {';'}
	 <scope> -> .{}, {';'}
	 <while-loop> -> while(<conditional-expresssion>).<scope>, {';'} 

162 	 <expression> -> .<aritmetic-operation>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression><else-statement>, {';'}
	 <scope> -> {.<inst-list>}, {';'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <scope> -> .{}, {';'}
	 <inst> -> .<expression>, {';'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>, {';', '+', '-'}
	 <flux-control> -> .<for-loop>, {';'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <scope> -> .{<inst-list>}, {';'}
	 <conditional> -> .<full-conditional>, {';'}
	 <for-loop> -> .for(ID<iterable-expression>)<scope>, {';'}
	 <inst-list> -> .<inst>;, {'}'}
	 <inst> -> .<var-asign>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'}
	 <conditional> -> .<inline-conditional>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}, {';'}
	 <var-asign> -> .ID:=<expression>, {';'}
	 <var-dec> -> .let<vat-init-list>in<var-decl-expr>, {';'}
	 <scope> -> {.}, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <flux-control> -> .<conditional>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression>, {';'}
	 <inst> -> .<var-dec>, {';'}
	 <flux-control> -> .<while-loop>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <inst> -> .<scope>, {';'}
	 <inst-list> -> .<inst>;<inst-list>, {'}'}
	 <inst> -> .<flux-control>, {';'}
	 <while-loop> -> .while(<conditional-expresssion>)<scope>, {';'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'} 

163 	 <for-loop> -> for.(ID<iterable-expression>)<scope>, {';'} 

164 	 <for-loop> -> for(.ID<iterable-expression>)<scope>, {';'} 

165 	 <for-loop> -> for(ID.<iterable-expression>)<scope>, {';'} 

166 	 <for-loop> -> for(ID<iterable-expression>.)<scope>, {';'} 

167 	 <scope> -> .{<inst-list>}, {';'}
	 <scope> -> .{}, {';'}
	 <for-loop> -> for(ID<iterable-expression>).<scope>, {';'} 

168 	 <for-loop> -> for(ID<iterable-expression>)<scope>., {';'} 

169 	 <scope> -> {}., {';'} 

170 	 <var-dec> -> let.<vat-init-list>in<var-decl-expr>, {';'}
	 <identifier> -> .ID, {'='}
	 <identifier> -> .ID<type-anotation>, {'='}
	 <vat-init-list> -> .<var-init>, {'in'}
	 <var-init> -> .<identifier>=<expression>, {',', 'in'}
	 <vat-init-list> -> .<var-init>,<vat-init-list>, {'in'}
	 <var-init> -> .<identifier>=<var-asign>, {',', 'in'} 

171 	 <type-anotation> -> .:Number, {'='}
	 <identifier> -> ID., {'='}
	 <identifier> -> ID.<type-anotation>, {'='} 

172 	 <type-anotation> -> :.Number, {'='} 

173 	 <type-anotation> -> :Number., {'='} 

174 	 <identifier> -> ID<type-anotation>., {'='} 

175 	 <vat-init-list> -> <var-init>., {'in'}
	 <vat-init-list> -> <var-init>.,<vat-init-list>, {'in'} 

176 	 <vat-init-list> -> .<var-init>, {'in'}
	 <identifier> -> .ID, {'='}
	 <var-init> -> .<identifier>=<expression>, {',', 'in'}
	 <identifier> -> .ID<type-anotation>, {'='}
	 <vat-init-list> -> .<var-init>,<vat-init-list>, {'in'}
	 <vat-init-list> -> <var-init>,.<vat-init-list>, {'in'}
	 <var-init> -> .<identifier>=<var-asign>, {',', 'in'} 

177 	 <vat-init-list> -> <var-init>,<vat-init-list>., {'in'} 

178 	 <var-init> -> <identifier>.=<var-asign>, {',', 'in'}
	 <var-init> -> <identifier>.=<expression>, {',', 'in'} 

179 	 <atom> -> .number, {',', '+', '-', '*', '/', 'in'}
	 <var-init> -> <identifier>=.<expression>, {',', 'in'}
	 <factor> -> .<atom>, {'+', ',', 'in', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', 'in'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>*<factor>, {'+', ',', 'in', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', 'in'}
	 <atom> -> .(<aritmetic-operation>), {'+', ',', '-', '*', '/', 'in'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', 'in'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', 'in'}
	 <aritmetic-operation> -> .<factor>, {',', 'in'}
	 <expression> -> .<aritmetic-operation>, {',', 'in'}
	 <var-asign> -> .ID:=<expression>, {',', 'in'}
	 <var-init> -> <identifier>=.<var-asign>, {',', 'in'}
	 <factor> -> .<atom>/<factor>, {',', '+', 'in', '-'} 

180 	 <function-call> -> ID.(), {',', '+', '-', '*', '/', 'in'}
	 <var-asign> -> ID.:=<expression>, {',', 'in'}
	 <atom> -> ID., {',', '+', '-', '*', '/', 'in'}
	 <function-call> -> ID.(<param-list>), {'+', ',', '-', '*', '/', 'in'} 

181 	 <atom> -> .number, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>, {',', 'in'}
	 <factor> -> .<atom>, {'+', ',', 'in', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', 'in'}
	 <expression> -> .<aritmetic-operation>, {',', 'in'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', 'in'}
	 <var-asign> -> ID:=.<expression>, {',', 'in'}
	 <factor> -> .<atom>*<factor>, {'+', ',', 'in', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', 'in'}
	 <atom> -> .(<aritmetic-operation>), {'+', ',', '-', '*', '/', 'in'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', 'in'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', 'in'}
	 <factor> -> .<atom>/<factor>, {',', '+', 'in', '-'} 

182 	 <function-call> -> ID.(), {',', '+', '-', '*', '/', 'in'}
	 <atom> -> ID., {',', '+', '-', '*', '/', 'in'}
	 <function-call> -> ID.(<param-list>), {',', '+', '-', '*', '/', 'in'} 

183 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <param-list> -> .<expression>, {')'}
	 <function-call> -> ID(.), {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <function-call> -> ID(.<param-list>), {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

184 	 <function-call> -> ID()., {',', '+', '-', '*', '/', 'in'} 

185 	 <function-call> -> ID(<param-list>.), {',', '+', '-', '*', '/', 'in'} 

186 	 <function-call> -> ID(<param-list>)., {',', '+', '-', '*', '/', 'in'} 

187 	 <atom> -> number., {',', '+', '-', '*', '/', 'in'} 

188 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> (.<aritmetic-operation>), {'+', ',', '-', '*', '/', 'in'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

189 	 <atom> -> (<aritmetic-operation>.), {'+', ',', '-', '*', '/', 'in'} 

190 	 <atom> -> (<aritmetic-operation>)., {'+', ',', '-', '*', '/', 'in'} 

191 	 <var-asign> -> ID:=<expression>., {',', 'in'} 

192 	 <expression> -> <aritmetic-operation>., {',', 'in'} 

193 	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {',', 'in'}
	 <aritmetic-operation> -> <factor>., {',', 'in'}
	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {',', 'in'} 

194 	 <atom> -> .number, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>, {',', 'in'}
	 <factor> -> .<atom>, {'+', ',', 'in', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', 'in'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>*<factor>, {'+', ',', 'in', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {',', 'in'}
	 <atom> -> .(<aritmetic-operation>), {'+', ',', '-', '*', '/', 'in'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', 'in'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', 'in'}
	 <factor> -> .<atom>/<factor>, {',', '+', 'in', '-'} 

195 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {',', 'in'} 

196 	 <factor> -> <atom>./<factor>, {',', '+', 'in', '-'}
	 <factor> -> <atom>., {'+', ',', 'in', '-'}
	 <factor> -> <atom>.*<factor>, {'+', ',', 'in', '-'} 

197 	 <factor> -> <atom>*.<factor>, {'+', ',', 'in', '-'}
	 <atom> -> .number, {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>, {'+', ',', 'in', '-'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>*<factor>, {'+', ',', 'in', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', 'in'}
	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', 'in'}
	 <function-call> -> .ID(<param-list>), {',', '+', '-', '*', '/', 'in'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>/<factor>, {'+', ',', 'in', '-'} 

198 	 <factor> -> <atom>*<factor>., {'+', ',', 'in', '-'} 

199 	 <atom> -> <function-call>., {',', '+', '-', '*', '/', 'in'} 

200 	 <atom> -> .number, {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>, {',', '+', 'in', '-'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>*<factor>, {',', '+', 'in', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', 'in'}
	 <factor> -> <atom>/.<factor>, {',', '+', 'in', '-'}
	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', 'in'}
	 <function-call> -> .ID(<param-list>), {',', '+', '-', '*', '/', 'in'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>/<factor>, {',', '+', 'in', '-'} 

201 	 <factor> -> <atom>/<factor>., {',', '+', 'in', '-'} 

202 	 <atom> -> .number, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>, {',', 'in'}
	 <factor> -> .<atom>, {'+', ',', 'in', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', 'in'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', 'in'}
	 <factor> -> .<atom>*<factor>, {'+', ',', 'in', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', 'in'}
	 <atom> -> .(<aritmetic-operation>), {'+', ',', '-', '*', '/', 'in'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {',', 'in'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', 'in'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', 'in'}
	 <factor> -> .<atom>/<factor>, {',', '+', 'in', '-'} 

203 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {',', 'in'} 

204 	 <var-init> -> <identifier>=<expression>., {',', 'in'} 

205 	 <var-init> -> <identifier>=<var-asign>., {',', 'in'} 

206 	 <var-dec> -> let<vat-init-list>.in<var-decl-expr>, {';'} 

207 	 <expression> -> .<aritmetic-operation>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression><else-statement>, {';'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <scope> -> .{}, {';'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <var-dec> -> let<vat-init-list>in.<var-decl-expr>, {';'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>, {';', '+', '-'}
	 <flux-control> -> .<for-loop>, {';'}
	 <var-decl-expr> -> .<var-dec>, {';'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <scope> -> .{<inst-list>}, {';'}
	 <conditional> -> .<full-conditional>, {';'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'}
	 <for-loop> -> .for(ID<iterable-expression>)<scope>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'}
	 <conditional> -> .<inline-conditional>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}, {';'}
	 <var-decl-expr> -> .<flux-control>, {';'}
	 <var-dec> -> .let<vat-init-list>in<var-decl-expr>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <flux-control> -> .<conditional>, {';'}
	 <var-decl-expr> -> .<scope>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression>, {';'}
	 <flux-control> -> .<while-loop>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <while-loop> -> .while(<conditional-expresssion>)<scope>, {';'}
	 <var-decl-expr> -> .<expression>, {';'} 

208 	 <function-call> -> ID.(), {';', '+', '-', '*', '/'}
	 <atom> -> ID., {';', '+', '-', '*', '/'}
	 <function-call> -> ID.(<param-list>), {';', '+', '-', '*', '/'} 

209 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <function-call> -> ID(.<param-list>), {';', '+', '-', '*', '/'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <param-list> -> .<expression>, {')'}
	 <function-call> -> ID(.), {';', '+', '-', '*', '/'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

210 	 <function-call> -> ID()., {';', '+', '-', '*', '/'} 

211 	 <function-call> -> ID(<param-list>.), {';', '+', '-', '*', '/'} 

212 	 <function-call> -> ID(<param-list>)., {';', '+', '-', '*', '/'} 

213 	 <atom> -> number., {';', '+', '-', '*', '/'} 

214 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <atom> -> (.<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

215 	 <atom> -> (<aritmetic-operation>.), {';', '+', '-', '*', '/'} 

216 	 <atom> -> (<aritmetic-operation>)., {';', '+', '-', '*', '/'} 

217 	 <inline-conditional> -> if.(<conditional-expresssion>)<expression>, {';'}
	 <full-conditional> -> if.(<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <inline-conditional> -> if.(<conditional-expresssion>)<expression><else-statement>, {';'}
	 <full-conditional> -> if.(<conditional-expresssion>){<inst-list>}, {';'} 

218 	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>=<<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>>=<expression>, {'|', '&', ')'}
	 <comparation> -> .<expression>==<expression>, {'|', '&', ')'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '>', '<', '>=', '/', '=<', '==', '!='}
	 <atom> -> .<function-call>, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <aritmetic-operation> -> .<factor>, {'>', '<', '>=', '=<', '==', '!='}
	 <conditional-expresssion> -> .<condition>|<conditional-expresssion>, {')'}
	 <boolean-value> -> .true, {'|', '&', ')'}
	 <full-conditional> -> if(.<conditional-expresssion>){<inst-list>}, {';'}
	 <conditional-expresssion> -> .<condition>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression><<expression>, {'|', '&', ')'}
	 <conditional-expresssion> -> .!<condition>, {')'}
	 <conditional-expresssion> -> .<condition>&<conditional-expresssion>, {')'}
	 <factor> -> .<atom>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <condition> -> .<boolean-value>, {'|', '&', ')'}
	 <atom> -> .number, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <condition> -> .(<conditional-expresssion>), {'|', '&', ')'}
	 <factor> -> .<atom>*<factor>, {'+', '-', '>', '<', '>=', '=<', '==', '!='}
	 <function-call> -> .ID(), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <atom> -> .ID, {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <boolean-value> -> .false, {'|', '&', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '>', '<', '/', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>><expression>, {'|', '&', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <full-conditional> -> if(.<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <condition> -> .<comparation>, {'|', '&', ')'}
	 <inline-conditional> -> if(.<conditional-expresssion>)<expression>, {';'}
	 <inline-conditional> -> if(.<conditional-expresssion>)<expression><else-statement>, {';'}
	 <expression> -> .<aritmetic-operation>, {'>', '<', '>=', '=<', '==', '!='}
	 <comparation> -> .<expression>!=<expression>, {'|', '&', ')'} 

219 	 <inline-conditional> -> if(<conditional-expresssion>.)<expression>, {';'}
	 <full-conditional> -> if(<conditional-expresssion>.){<inst-list>}<else-statement>, {';'}
	 <full-conditional> -> if(<conditional-expresssion>.){<inst-list>}, {';'}
	 <inline-conditional> -> if(<conditional-expresssion>.)<expression><else-statement>, {';'} 

220 	 <inline-conditional> -> if(<conditional-expresssion>).<expression><else-statement>, {';'}
	 <factor> -> .<atom>/<factor>, {';', '+', 'else', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';', 'else'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>, {';', '+', 'else', '-'}
	 <full-conditional> -> if(<conditional-expresssion>).{<inst-list>}, {';'}
	 <atom> -> .number, {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>*<factor>, {';', '+', 'else', '-'}
	 <atom> -> .ID, {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/', 'else'}
	 <aritmetic-operation> -> .<factor>, {';', 'else'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';', 'else'}
	 <full-conditional> -> if(<conditional-expresssion>).{<inst-list>}<else-statement>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/', 'else'}
	 <expression> -> .<aritmetic-operation>, {';', 'else'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/', 'else'}
	 <inline-conditional> -> if(<conditional-expresssion>).<expression>, {';'} 

221 	 <expression> -> .<aritmetic-operation>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression><else-statement>, {';'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <scope> -> .{}, {';'}
	 <inst> -> .<expression>, {';'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>, {';', '+', '-'}
	 <flux-control> -> .<for-loop>, {';'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <full-conditional> -> if(<conditional-expresssion>){.<inst-list>}, {';'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <scope> -> .{<inst-list>}, {';'}
	 <conditional> -> .<full-conditional>, {';'}
	 <for-loop> -> .for(ID<iterable-expression>)<scope>, {';'}
	 <full-conditional> -> if(<conditional-expresssion>){.<inst-list>}<else-statement>, {';'}
	 <inst-list> -> .<inst>;, {'}'}
	 <inst> -> .<var-asign>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'}
	 <conditional> -> .<inline-conditional>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}, {';'}
	 <var-asign> -> .ID:=<expression>, {';'}
	 <var-dec> -> .let<vat-init-list>in<var-decl-expr>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <flux-control> -> .<conditional>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression>, {';'}
	 <inst> -> .<var-dec>, {';'}
	 <flux-control> -> .<while-loop>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <inst> -> .<scope>, {';'}
	 <inst-list> -> .<inst>;<inst-list>, {'}'}
	 <inst> -> .<flux-control>, {';'}
	 <while-loop> -> .while(<conditional-expresssion>)<scope>, {';'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'} 

222 	 <var-asign> -> ID.:=<expression>, {';'}
	 <function-call> -> ID.(), {';', '+', '-', '*', '/'}
	 <atom> -> ID., {';', '+', '-', '*', '/'}
	 <function-call> -> ID.(<param-list>), {';', '+', '-', '*', '/'} 

223 	 <expression> -> .<aritmetic-operation>, {';'}
	 <factor> -> .<atom>, {';', '+', '-'}
	 <var-asign> -> ID:=.<expression>, {';'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'} 

224 	 <var-asign> -> ID:=<expression>., {';'} 

225 	 <expression> -> <aritmetic-operation>., {';'} 

226 	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {';'}
	 <aritmetic-operation> -> <factor>., {';'}
	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {';'} 

227 	 <factor> -> .<atom>, {';', '+', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {';'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'} 

228 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {';'} 

229 	 <factor> -> <atom>.*<factor>, {';', '+', '-'}
	 <factor> -> <atom>., {';', '+', '-'}
	 <factor> -> <atom>./<factor>, {';', '+', '-'} 

230 	 <factor> -> .<atom>, {';', '+', '-'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <factor> -> <atom>*.<factor>, {';', '+', '-'} 

231 	 <factor> -> <atom>*<factor>., {';', '+', '-'} 

232 	 <atom> -> <function-call>., {';', '+', '-', '*', '/'} 

233 	 <factor> -> .<atom>, {';', '+', '-'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <factor> -> <atom>/.<factor>, {';', '+', '-'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'} 

234 	 <factor> -> <atom>/<factor>., {';', '+', '-'} 

235 	 <factor> -> .<atom>, {';', '+', '-'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {';'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'} 

236 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {';'} 

237 	 <full-conditional> -> if(<conditional-expresssion>){<inst-list>.}<else-statement>, {';'}
	 <full-conditional> -> if(<conditional-expresssion>){<inst-list>.}, {';'} 

238 	 <else-statement> -> .else<full-else>, {';'}
	 <else-statement> -> .else<inline-else>, {';'}
	 <full-conditional> -> if(<conditional-expresssion>){<inst-list>}.<else-statement>, {';'}
	 <full-conditional> -> if(<conditional-expresssion>){<inst-list>}., {';'} 

239 	 <else-statement> -> else.<full-else>, {';'}
	 <else-statement> -> else.<inline-else>, {';'} 

240 	 <else-statement> -> else<inline-else>., {';'} 

241 	 <else-statement> -> else<full-else>., {';'} 

242 	 <full-conditional> -> if(<conditional-expresssion>){<inst-list>}<else-statement>., {';'} 

243 	 <inst-list> -> <inst>.;<inst-list>, {'}'}
	 <inst-list> -> <inst>.;, {'}'} 

244 	 <expression> -> .<aritmetic-operation>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression><else-statement>, {';'}
	 <inst-list> -> <inst>;.<inst-list>, {'}'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <scope> -> .{}, {';'}
	 <inst> -> .<expression>, {';'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>, {';', '+', '-'}
	 <flux-control> -> .<for-loop>, {';'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <scope> -> .{<inst-list>}, {';'}
	 <conditional> -> .<full-conditional>, {';'}
	 <for-loop> -> .for(ID<iterable-expression>)<scope>, {';'}
	 <inst-list> -> .<inst>;, {'}'}
	 <inst> -> .<var-asign>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'}
	 <conditional> -> .<inline-conditional>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}, {';'}
	 <var-asign> -> .ID:=<expression>, {';'}
	 <var-dec> -> .let<vat-init-list>in<var-decl-expr>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <flux-control> -> .<conditional>, {';'}
	 <inst-list> -> <inst>;., {'}'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression>, {';'}
	 <inst> -> .<var-dec>, {';'}
	 <flux-control> -> .<while-loop>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <inst> -> .<scope>, {';'}
	 <inst-list> -> .<inst>;<inst-list>, {'}'}
	 <inst> -> .<flux-control>, {';'}
	 <while-loop> -> .while(<conditional-expresssion>)<scope>, {';'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'} 

245 	 <inst-list> -> <inst>;<inst-list>., {'}'} 

246 	 <inst> -> <var-dec>., {';'} 

247 	 <inst> -> <expression>., {';'} 

248 	 <inst> -> <flux-control>., {';'} 

249 	 <inst> -> <scope>., {';'} 

250 	 <inst> -> <var-asign>., {';'} 

251 	 <flux-control> -> <conditional>., {';'} 

252 	 <conditional> -> <inline-conditional>., {';'} 

253 	 <conditional> -> <full-conditional>., {';'} 

254 	 <flux-control> -> <while-loop>., {';'} 

255 	 <flux-control> -> <for-loop>., {';'} 

256 	 <atom> -> ID., {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> ID.(<param-list>), {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> ID.(), {';', '+', '-', '*', '/', 'else'} 

257 	 <atom> -> .(<aritmetic-operation>), {',', '+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', ',', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>*<factor>, {',', '+', ')', '-'}
	 <param-list> -> .<expression>, {')'}
	 <function-call> -> ID(.<param-list>), {';', '+', '-', '*', '/', 'else'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {',', ')'}
	 <atom> -> .number, {',', '+', '-', '*', '/', ')'}
	 <param-list> -> .<expression>,<param-list>, {')'}
	 <function-call> -> ID(.), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>/<factor>, {',', '+', ')', '-'}
	 <atom> -> .ID, {',', '+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {',', ')'}
	 <aritmetic-operation> -> .<factor>, {',', ')'}
	 <function-call> -> .ID(), {',', '+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {',', '+', ')', '-'}
	 <expression> -> .<aritmetic-operation>, {',', ')'} 

258 	 <function-call> -> ID()., {';', '+', '-', '*', '/', 'else'} 

259 	 <function-call> -> ID(<param-list>.), {';', '+', '-', '*', '/', 'else'} 

260 	 <function-call> -> ID(<param-list>)., {';', '+', '-', '*', '/', 'else'} 

261 	 <atom> -> number., {';', '+', '-', '*', '/', 'else'} 

262 	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {')'}
	 <aritmetic-operation> -> .<factor>, {')'}
	 <function-call> -> .ID(), {'+', '-', '*', '/', ')'}
	 <atom> -> .ID, {'+', '-', '*', '/', ')'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {')'}
	 <factor> -> .<atom>/<factor>, {'+', ')', '-'}
	 <atom> -> .(<aritmetic-operation>), {'+', '-', '*', '/', ')'}
	 <function-call> -> .ID(<param-list>), {'+', '-', '*', '/', ')'}
	 <atom> -> .<function-call>, {'+', '-', '*', '/', ')'}
	 <factor> -> .<atom>, {'+', ')', '-'}
	 <atom> -> (.<aritmetic-operation>), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>*<factor>, {'+', ')', '-'}
	 <atom> -> .number, {'+', '-', '*', '/', ')'} 

263 	 <atom> -> (<aritmetic-operation>.), {';', '+', '-', '*', '/', 'else'} 

264 	 <atom> -> (<aritmetic-operation>)., {';', '+', '-', '*', '/', 'else'} 

265 	 <else-statement> -> .else<full-else>, {';'}
	 <inline-conditional> -> if(<conditional-expresssion>)<expression>.<else-statement>, {';'}
	 <else-statement> -> .else<inline-else>, {';'}
	 <inline-conditional> -> if(<conditional-expresssion>)<expression>., {';'} 

266 	 <inline-conditional> -> if(<conditional-expresssion>)<expression><else-statement>., {';'} 

267 	 <expression> -> <aritmetic-operation>., {';', 'else'} 

268 	 <aritmetic-operation> -> <factor>.+<aritmetic-operation>, {';', 'else'}
	 <aritmetic-operation> -> <factor>.-<aritmetic-operation>, {';', 'else'}
	 <aritmetic-operation> -> <factor>., {';', 'else'} 

269 	 <atom> -> .ID, {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/', 'else'}
	 <aritmetic-operation> -> .<factor>, {';', 'else'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';', 'else'}
	 <factor> -> .<atom>/<factor>, {';', '+', 'else', '-'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/', 'else'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';', 'else'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>, {';', '+', 'else', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/', 'else'}
	 <aritmetic-operation> -> <factor>+.<aritmetic-operation>, {';', 'else'}
	 <atom> -> .number, {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>*<factor>, {';', '+', 'else', '-'} 

270 	 <aritmetic-operation> -> <factor>+<aritmetic-operation>., {';', 'else'} 

271 	 <factor> -> <atom>./<factor>, {';', '+', 'else', '-'}
	 <factor> -> <atom>., {';', '+', 'else', '-'}
	 <factor> -> <atom>.*<factor>, {';', '+', 'else', '-'} 

272 	 <atom> -> .ID, {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>/<factor>, {';', '+', 'else', '-'}
	 <factor> -> <atom>*.<factor>, {';', '+', 'else', '-'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>, {';', '+', 'else', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/', 'else'}
	 <atom> -> .number, {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>*<factor>, {';', '+', 'else', '-'} 

273 	 <factor> -> <atom>*<factor>., {';', '+', 'else', '-'} 

274 	 <atom> -> <function-call>., {';', '+', '-', '*', '/', 'else'} 

275 	 <atom> -> .ID, {';', '+', '-', '*', '/', 'else'}
	 <factor> -> <atom>/.<factor>, {';', '+', 'else', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>/<factor>, {';', '+', 'else', '-'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>, {';', '+', 'else', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/', 'else'}
	 <atom> -> .number, {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>*<factor>, {';', '+', 'else', '-'} 

276 	 <factor> -> <atom>/<factor>., {';', '+', 'else', '-'} 

277 	 <aritmetic-operation> -> <factor>-.<aritmetic-operation>, {';', 'else'}
	 <atom> -> .ID, {';', '+', '-', '*', '/', 'else'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/', 'else'}
	 <aritmetic-operation> -> .<factor>, {';', 'else'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';', 'else'}
	 <factor> -> .<atom>/<factor>, {';', '+', 'else', '-'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/', 'else'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';', 'else'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>, {';', '+', 'else', '-'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/', 'else'}
	 <atom> -> .number, {';', '+', '-', '*', '/', 'else'}
	 <factor> -> .<atom>*<factor>, {';', '+', 'else', '-'} 

278 	 <aritmetic-operation> -> <factor>-<aritmetic-operation>., {';', 'else'} 

279 	 <var-decl-expr> -> <var-dec>., {';'} 

280 	 <var-decl-expr> -> <expression>., {';'} 

281 	 <var-decl-expr> -> <flux-control>., {';'} 

282 	 <var-decl-expr> -> <scope>., {';'} 

283 	 <var-dec> -> let<vat-init-list>in<var-decl-expr>., {';'} 

284 	 <scope> -> {<inst-list>.}, {';'} 

285 	 <scope> -> {<inst-list>}., {';'} 

286 	 <while-loop> -> while(<conditional-expresssion>)<scope>., {';'} 

287 	 S' -> <program>., {'$'} 

288 	 <program> -> <inst-list>., {'$'} 

289 	 <inst-list> -> <inst>.;<inst-list>, {'$'}
	 <inst-list> -> <inst>.;, {'$'} 

290 	 <expression> -> .<aritmetic-operation>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression><else-statement>, {';'}
	 <inst-list> -> .<inst>;, {'$'}
	 <atom> -> .number, {';', '+', '-', '*', '/'}
	 <scope> -> .{}, {';'}
	 <inst> -> .<expression>, {';'}
	 <factor> -> .<atom>/<factor>, {';', '+', '-'}
	 <function-call> -> .ID(), {';', '+', '-', '*', '/'}
	 <atom> -> .ID, {';', '+', '-', '*', '/'}
	 <inst-list> -> <inst>;., {'$'}
	 <factor> -> .<atom>, {';', '+', '-'}
	 <flux-control> -> .<for-loop>, {';'}
	 <aritmetic-operation> -> .<factor>+<aritmetic-operation>, {';'}
	 <function-call> -> .ID(<param-list>), {';', '+', '-', '*', '/'}
	 <factor> -> .<atom>*<factor>, {';', '+', '-'}
	 <scope> -> .{<inst-list>}, {';'}
	 <conditional> -> .<full-conditional>, {';'}
	 <for-loop> -> .for(ID<iterable-expression>)<scope>, {';'}
	 <inst-list> -> .<inst>;<inst-list>, {'$'}
	 <inst> -> .<var-asign>, {';'}
	 <aritmetic-operation> -> .<factor>, {';'}
	 <conditional> -> .<inline-conditional>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}, {';'}
	 <inst-list> -> <inst>;.<inst-list>, {'$'}
	 <var-dec> -> .let<vat-init-list>in<var-decl-expr>, {';'}
	 <var-asign> -> .ID:=<expression>, {';'}
	 <full-conditional> -> .if(<conditional-expresssion>){<inst-list>}<else-statement>, {';'}
	 <flux-control> -> .<conditional>, {';'}
	 <inline-conditional> -> .if(<conditional-expresssion>)<expression>, {';'}
	 <inst> -> .<var-dec>, {';'}
	 <flux-control> -> .<while-loop>, {';'}
	 <atom> -> .(<aritmetic-operation>), {';', '+', '-', '*', '/'}
	 <atom> -> .<function-call>, {';', '+', '-', '*', '/'}
	 <inst> -> .<scope>, {';'}
	 <inst> -> .<flux-control>, {';'}
	 <while-loop> -> .while(<conditional-expresssion>)<scope>, {';'}
	 <aritmetic-operation> -> .<factor>-<aritmetic-operation>, {';'} 

291 	 <inst-list> -> <inst>;<inst-list>., {'$'} 

(0, '<aritmetic-operation>') 225
(0, 'if') ('SHIFT', 217)
(0, '<inst>') 289
(0, 'number') ('SHIFT', 213)
(0, '{') ('SHIFT', 162)
(0, '<expression>') 247
(0, '<atom>') 229
(0, '<program>') 287
(0, 'ID') ('SHIFT', 222)
(0, 'ID') ('SHIFT', 222)
(0, '<atom>') 229
(0, '<for-loop>') 255
(0, '<factor>') 226
(0, 'ID') ('SHIFT', 222)
(0, '<atom>') 229
(0, '{') ('SHIFT', 162)
(0, '<full-conditional>') 253
(0, 'for') ('SHIFT', 163)
(0, '<inst>') 289
(0, '<inst-list>') 288
(0, '<var-asign>') 250
(0, '<factor>') 226
(0, '<inline-conditional>') 252
(0, 'if') ('SHIFT', 217)
(0, 'ID') ('SHIFT', 222)
(0, 'let') ('SHIFT', 170)
(0, 'if') ('SHIFT', 217)
(0, '<conditional>') 251
(0, 'if') ('SHIFT', 217)
(0, '<var-dec>') 246
(0, '<while-loop>') 254
(0, '(') ('SHIFT', 214)
(0, '<function-call>') 232
(0, '<scope>') 249
(0, '<flux-control>') 248
(0, 'while') ('SHIFT', 1)
(0, '<factor>') 226
(1, '(') ('SHIFT', 2)
(2, '<condition>') 117
(2, '<conditional-expresssion>') 160
(2, '<atom>') 125
(2, '<expression>') 65
(2, '!') ('SHIFT', 61)
(2, '<condition>') 117
(2, '<atom>') 125
(2, '<boolean-value>') 134
(2, 'number') ('SHIFT', 52)
(2, '(') ('SHIFT', 53)
(2, '<factor>') 120
(2, '<atom>') 125
(2, 'ID') ('SHIFT', 3)
(2, 'ID') ('SHIFT', 3)
(2, '<expression>') 65
(2, '<expression>') 65
(2, '<expression>') 65
(2, '(') ('SHIFT', 53)
(2, 'false') ('SHIFT', 64)
(2, 'ID') ('SHIFT', 3)
(2, '<expression>') 65
(2, '<function-call>') 128
(2, '<factor>') 120
(2, '<factor>') 120
(2, '<condition>') 117
(2, 'true') ('SHIFT', 63)
(2, '<comparation>') 135
(2, '<aritmetic-operation>') 119
(2, '<expression>') 65
(3, '(') ('SHIFT', 4)
(3, '(') ('SHIFT', 4)
(3, '+') ('REDUCE', <atom> -> ID)
(3, '-') ('REDUCE', <atom> -> ID)
(3, '*') ('REDUCE', <atom> -> ID)
(3, '>') ('REDUCE', <atom> -> ID)
(3, '<') ('REDUCE', <atom> -> ID)
(3, '/') ('REDUCE', <atom> -> ID)
(3, '>=') ('REDUCE', <atom> -> ID)
(3, '=<') ('REDUCE', <atom> -> ID)
(3, '==') ('REDUCE', <atom> -> ID)
(3, '!=') ('REDUCE', <atom> -> ID)
(4, '(') ('SHIFT', 8)
(4, 'ID') ('SHIFT', 5)
(4, '<function-call>') 21
(4, '<atom>') 18
(4, '<expression>') 12
(4, ')') ('SHIFT', 49)
(4, '<factor>') 15
(4, 'number') ('SHIFT', 7)
(4, '<expression>') 12
(4, '<atom>') 18
(4, 'ID') ('SHIFT', 5)
(4, '<factor>') 15
(4, '<factor>') 15
(4, 'ID') ('SHIFT', 5)
(4, '<atom>') 18
(4, '<param-list>') 50
(4, '<aritmetic-operation>') 14
(5, '(') ('SHIFT', 6)
(5, ',') ('REDUCE', <atom> -> ID)
(5, '+') ('REDUCE', <atom> -> ID)
(5, '-') ('REDUCE', <atom> -> ID)
(5, '*') ('REDUCE', <atom> -> ID)
(5, '/') ('REDUCE', <atom> -> ID)
(5, ')') ('REDUCE', <atom> -> ID)
(5, '(') ('SHIFT', 6)
(6, '(') ('SHIFT', 8)
(6, 'ID') ('SHIFT', 5)
(6, '<function-call>') 21
(6, '<atom>') 18
(6, '<expression>') 12
(6, '<param-list>') 47
(6, '<factor>') 15
(6, 'number') ('SHIFT', 7)
(6, '<expression>') 12
(6, '<atom>') 18
(6, 'ID') ('SHIFT', 5)
(6, '<factor>') 15
(6, ')') ('SHIFT', 46)
(6, '<factor>') 15
(6, 'ID') ('SHIFT', 5)
(6, '<atom>') 18
(6, '<aritmetic-operation>') 14
(7, ',') ('REDUCE', <atom> -> number)
(7, '+') ('REDUCE', <atom> -> number)
(7, '-') ('REDUCE', <atom> -> number)
(7, '*') ('REDUCE', <atom> -> number)
(7, '/') ('REDUCE', <atom> -> number)
(7, ')') ('REDUCE', <atom> -> number)
(8, '<factor>') 33
(8, '<factor>') 33
(8, '<aritmetic-operation>') 44
(8, 'ID') ('SHIFT', 9)
(8, 'ID') ('SHIFT', 9)
(8, '<factor>') 33
(8, '<atom>') 36
(8, '(') ('SHIFT', 30)
(8, 'ID') ('SHIFT', 9)
(8, '<function-call>') 39
(8, '<atom>') 36
(8, '<atom>') 36
(8, 'number') ('SHIFT', 29)
(9, '(') ('SHIFT', 10)
(9, '+') ('REDUCE', <atom> -> ID)
(9, '-') ('REDUCE', <atom> -> ID)
(9, '*') ('REDUCE', <atom> -> ID)
(9, '/') ('REDUCE', <atom> -> ID)
(9, ')') ('REDUCE', <atom> -> ID)
(9, '(') ('SHIFT', 10)
(10, '(') ('SHIFT', 8)
(10, 'ID') ('SHIFT', 5)
(10, '<function-call>') 21
(10, '<atom>') 18
(10, ')') ('SHIFT', 11)
(10, '<expression>') 12
(10, '<factor>') 15
(10, 'number') ('SHIFT', 7)
(10, '<param-list>') 27
(10, '<expression>') 12
(10, '<atom>') 18
(10, 'ID') ('SHIFT', 5)
(10, '<factor>') 15
(10, '<factor>') 15
(10, 'ID') ('SHIFT', 5)
(10, '<atom>') 18
(10, '<aritmetic-operation>') 14
(11, '+') ('REDUCE', <function-call> -> ID ( ))
(11, '-') ('REDUCE', <function-call> -> ID ( ))
(11, '*') ('REDUCE', <function-call> -> ID ( ))
(11, '/') ('REDUCE', <function-call> -> ID ( ))
(11, ')') ('REDUCE', <function-call> -> ID ( ))
(12, ',') ('SHIFT', 13)
(12, ')') ('REDUCE', <param-list> -> <expression>)
(13, '(') ('SHIFT', 8)
(13, 'ID') ('SHIFT', 5)
(13, '<function-call>') 21
(13, '<atom>') 18
(13, '<expression>') 12
(13, '<factor>') 15
(13, 'number') ('SHIFT', 7)
(13, '<expression>') 12
(13, '<atom>') 18
(13, 'ID') ('SHIFT', 5)
(13, '<param-list>') 26
(13, '<factor>') 15
(13, '<factor>') 15
(13, 'ID') ('SHIFT', 5)
(13, '<atom>') 18
(13, '<aritmetic-operation>') 14
(14, ',') ('REDUCE', <expression> -> <aritmetic-operation>)
(14, ')') ('REDUCE', <expression> -> <aritmetic-operation>)
(15, '+') ('SHIFT', 16)
(15, '-') ('SHIFT', 24)
(15, ',') ('REDUCE', <aritmetic-operation> -> <factor>)
(15, ')') ('REDUCE', <aritmetic-operation> -> <factor>)
(16, '(') ('SHIFT', 8)
(16, 'ID') ('SHIFT', 5)
(16, '<aritmetic-operation>') 17
(16, '<function-call>') 21
(16, 'number') ('SHIFT', 7)
(16, '<atom>') 18
(16, '<atom>') 18
(16, 'ID') ('SHIFT', 5)
(16, '<factor>') 15
(16, '<factor>') 15
(16, 'ID') ('SHIFT', 5)
(16, '<atom>') 18
(16, '<factor>') 15
(17, ',') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(17, ')') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(18, '*') ('SHIFT', 19)
(18, ',') ('REDUCE', <factor> -> <atom>)
(18, '+') ('REDUCE', <factor> -> <atom>)
(18, ')') ('REDUCE', <factor> -> <atom>)
(18, '-') ('REDUCE', <factor> -> <atom>)
(18, '/') ('SHIFT', 22)
(19, '(') ('SHIFT', 8)
(19, 'ID') ('SHIFT', 5)
(19, '<function-call>') 21
(19, '<atom>') 18
(19, 'number') ('SHIFT', 7)
(19, '<atom>') 18
(19, 'ID') ('SHIFT', 5)
(19, '<factor>') 20
(19, 'ID') ('SHIFT', 5)
(19, '<atom>') 18
(20, ',') ('REDUCE', <factor> -> <atom> * <factor>)
(20, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(20, ')') ('REDUCE', <factor> -> <atom> * <factor>)
(20, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(21, ',') ('REDUCE', <atom> -> <function-call>)
(21, '+') ('REDUCE', <atom> -> <function-call>)
(21, '-') ('REDUCE', <atom> -> <function-call>)
(21, '*') ('REDUCE', <atom> -> <function-call>)
(21, '/') ('REDUCE', <atom> -> <function-call>)
(21, ')') ('REDUCE', <atom> -> <function-call>)
(22, '(') ('SHIFT', 8)
(22, 'ID') ('SHIFT', 5)
(22, '<function-call>') 21
(22, '<atom>') 18
(22, '<factor>') 23
(22, 'number') ('SHIFT', 7)
(22, '<atom>') 18
(22, 'ID') ('SHIFT', 5)
(22, 'ID') ('SHIFT', 5)
(22, '<atom>') 18
(23, ',') ('REDUCE', <factor> -> <atom> / <factor>)
(23, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(23, ')') ('REDUCE', <factor> -> <atom> / <factor>)
(23, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(24, '(') ('SHIFT', 8)
(24, 'ID') ('SHIFT', 5)
(24, '<function-call>') 21
(24, 'number') ('SHIFT', 7)
(24, '<atom>') 18
(24, '<aritmetic-operation>') 25
(24, '<atom>') 18
(24, 'ID') ('SHIFT', 5)
(24, '<factor>') 15
(24, '<factor>') 15
(24, 'ID') ('SHIFT', 5)
(24, '<atom>') 18
(24, '<factor>') 15
(25, ',') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(25, ')') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(26, ')') ('REDUCE', <param-list> -> <expression> , <param-list>)
(27, ')') ('SHIFT', 28)
(28, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(28, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(28, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(28, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(28, ')') ('REDUCE', <function-call> -> ID ( <param-list> ))
(29, '+') ('REDUCE', <atom> -> number)
(29, '-') ('REDUCE', <atom> -> number)
(29, '*') ('REDUCE', <atom> -> number)
(29, '/') ('REDUCE', <atom> -> number)
(29, ')') ('REDUCE', <atom> -> number)
(30, '<factor>') 33
(30, '<factor>') 33
(30, 'ID') ('SHIFT', 9)
(30, 'ID') ('SHIFT', 9)
(30, '<factor>') 33
(30, '<atom>') 36
(30, '(') ('SHIFT', 30)
(30, 'ID') ('SHIFT', 9)
(30, '<aritmetic-operation>') 31
(30, '<function-call>') 39
(30, '<atom>') 36
(30, '<atom>') 36
(30, 'number') ('SHIFT', 29)
(31, ')') ('SHIFT', 32)
(32, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(32, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(32, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(32, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(32, ')') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(33, '+') ('SHIFT', 34)
(33, '-') ('SHIFT', 42)
(33, ')') ('REDUCE', <aritmetic-operation> -> <factor>)
(34, '<factor>') 33
(34, '<factor>') 33
(34, 'ID') ('SHIFT', 9)
(34, 'ID') ('SHIFT', 9)
(34, '<factor>') 33
(34, '<atom>') 36
(34, '(') ('SHIFT', 30)
(34, 'ID') ('SHIFT', 9)
(34, '<aritmetic-operation>') 35
(34, '<function-call>') 39
(34, '<atom>') 36
(34, '<atom>') 36
(34, 'number') ('SHIFT', 29)
(35, ')') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(36, '+') ('REDUCE', <factor> -> <atom>)
(36, ')') ('REDUCE', <factor> -> <atom>)
(36, '-') ('REDUCE', <factor> -> <atom>)
(36, '/') ('SHIFT', 40)
(36, '*') ('SHIFT', 37)
(37, 'ID') ('SHIFT', 9)
(37, 'ID') ('SHIFT', 9)
(37, '<atom>') 36
(37, '(') ('SHIFT', 30)
(37, 'ID') ('SHIFT', 9)
(37, '<factor>') 38
(37, '<function-call>') 39
(37, '<atom>') 36
(37, '<atom>') 36
(37, 'number') ('SHIFT', 29)
(38, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(38, ')') ('REDUCE', <factor> -> <atom> * <factor>)
(38, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(39, '+') ('REDUCE', <atom> -> <function-call>)
(39, '-') ('REDUCE', <atom> -> <function-call>)
(39, '*') ('REDUCE', <atom> -> <function-call>)
(39, '/') ('REDUCE', <atom> -> <function-call>)
(39, ')') ('REDUCE', <atom> -> <function-call>)
(40, 'ID') ('SHIFT', 9)
(40, '<factor>') 41
(40, 'ID') ('SHIFT', 9)
(40, '<atom>') 36
(40, '(') ('SHIFT', 30)
(40, 'ID') ('SHIFT', 9)
(40, '<function-call>') 39
(40, '<atom>') 36
(40, '<atom>') 36
(40, 'number') ('SHIFT', 29)
(41, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(41, ')') ('REDUCE', <factor> -> <atom> / <factor>)
(41, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(42, '<factor>') 33
(42, '<factor>') 33
(42, 'ID') ('SHIFT', 9)
(42, 'ID') ('SHIFT', 9)
(42, '<aritmetic-operation>') 43
(42, '<factor>') 33
(42, '<atom>') 36
(42, '(') ('SHIFT', 30)
(42, 'ID') ('SHIFT', 9)
(42, '<function-call>') 39
(42, '<atom>') 36
(42, '<atom>') 36
(42, 'number') ('SHIFT', 29)
(43, ')') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(44, ')') ('SHIFT', 45)
(45, ',') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(45, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(45, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(45, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(45, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(45, ')') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(46, ',') ('REDUCE', <function-call> -> ID ( ))
(46, '+') ('REDUCE', <function-call> -> ID ( ))
(46, '-') ('REDUCE', <function-call> -> ID ( ))
(46, '*') ('REDUCE', <function-call> -> ID ( ))
(46, '/') ('REDUCE', <function-call> -> ID ( ))
(46, ')') ('REDUCE', <function-call> -> ID ( ))
(47, ')') ('SHIFT', 48)
(48, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(48, ',') ('REDUCE', <function-call> -> ID ( <param-list> ))
(48, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(48, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(48, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(48, ')') ('REDUCE', <function-call> -> ID ( <param-list> ))
(49, '+') ('REDUCE', <function-call> -> ID ( ))
(49, '-') ('REDUCE', <function-call> -> ID ( ))
(49, '*') ('REDUCE', <function-call> -> ID ( ))
(49, '>') ('REDUCE', <function-call> -> ID ( ))
(49, '<') ('REDUCE', <function-call> -> ID ( ))
(49, '/') ('REDUCE', <function-call> -> ID ( ))
(49, '>=') ('REDUCE', <function-call> -> ID ( ))
(49, '=<') ('REDUCE', <function-call> -> ID ( ))
(49, '==') ('REDUCE', <function-call> -> ID ( ))
(49, '!=') ('REDUCE', <function-call> -> ID ( ))
(50, ')') ('SHIFT', 51)
(51, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '>') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '<') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '>=') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '=<') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '==') ('REDUCE', <function-call> -> ID ( <param-list> ))
(51, '!=') ('REDUCE', <function-call> -> ID ( <param-list> ))
(52, '+') ('REDUCE', <atom> -> number)
(52, '-') ('REDUCE', <atom> -> number)
(52, '*') ('REDUCE', <atom> -> number)
(52, '>') ('REDUCE', <atom> -> number)
(52, '<') ('REDUCE', <atom> -> number)
(52, '/') ('REDUCE', <atom> -> number)
(52, '>=') ('REDUCE', <atom> -> number)
(52, '=<') ('REDUCE', <atom> -> number)
(52, '==') ('REDUCE', <atom> -> number)
(52, '!=') ('REDUCE', <atom> -> number)
(53, '<condition>') 117
(53, 'number') ('SHIFT', 59)
(53, '<expression>') 65
(53, '!') ('SHIFT', 61)
(53, '<factor>') 101
(53, 'ID') ('SHIFT', 54)
(53, '<condition>') 117
(53, 'ID') ('SHIFT', 54)
(53, '<boolean-value>') 134
(53, '<aritmetic-operation>') 99
(53, '(') ('SHIFT', 60)
(53, '(') ('SHIFT', 60)
(53, '<conditional-expresssion>') 158
(53, 'ID') ('SHIFT', 54)
(53, '<function-call>') 110
(53, '<factor>') 101
(53, '<expression>') 65
(53, '<expression>') 65
(53, '<expression>') 65
(53, '<factor>') 101
(53, 'false') ('SHIFT', 64)
(53, '<expression>') 65
(53, '<aritmetic-operation>') 99
(53, '<atom>') 107
(53, '<condition>') 117
(53, 'true') ('SHIFT', 63)
(53, '<comparation>') 135
(53, '<atom>') 107
(53, '<expression>') 65
(53, '<atom>') 107
(54, '(') ('SHIFT', 55)
(54, '!=') ('REDUCE', <atom> -> ID)
(54, '+') ('REDUCE', <atom> -> ID)
(54, '-') ('REDUCE', <atom> -> ID)
(54, '*') ('REDUCE', <atom> -> ID)
(54, '>') ('REDUCE', <atom> -> ID)
(54, '<') ('REDUCE', <atom> -> ID)
(54, '/') ('REDUCE', <atom> -> ID)
(54, '>=') ('REDUCE', <atom> -> ID)
(54, '=<') ('REDUCE', <atom> -> ID)
(54, '==') ('REDUCE', <atom> -> ID)
(54, ')') ('REDUCE', <atom> -> ID)
(54, '(') ('SHIFT', 55)
(55, '(') ('SHIFT', 8)
(55, 'ID') ('SHIFT', 5)
(55, '<function-call>') 21
(55, '<atom>') 18
(55, '<expression>') 12
(55, ')') ('SHIFT', 56)
(55, '<factor>') 15
(55, 'number') ('SHIFT', 7)
(55, '<expression>') 12
(55, '<atom>') 18
(55, 'ID') ('SHIFT', 5)
(55, '<param-list>') 57
(55, '<factor>') 15
(55, '<factor>') 15
(55, 'ID') ('SHIFT', 5)
(55, '<atom>') 18
(55, '<aritmetic-operation>') 14
(56, '+') ('REDUCE', <function-call> -> ID ( ))
(56, '-') ('REDUCE', <function-call> -> ID ( ))
(56, '*') ('REDUCE', <function-call> -> ID ( ))
(56, '>') ('REDUCE', <function-call> -> ID ( ))
(56, '<') ('REDUCE', <function-call> -> ID ( ))
(56, '/') ('REDUCE', <function-call> -> ID ( ))
(56, '>=') ('REDUCE', <function-call> -> ID ( ))
(56, '=<') ('REDUCE', <function-call> -> ID ( ))
(56, ')') ('REDUCE', <function-call> -> ID ( ))
(56, '==') ('REDUCE', <function-call> -> ID ( ))
(56, '!=') ('REDUCE', <function-call> -> ID ( ))
(57, ')') ('SHIFT', 58)
(58, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '>') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '<') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '>=') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '=<') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, ')') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '==') ('REDUCE', <function-call> -> ID ( <param-list> ))
(58, '!=') ('REDUCE', <function-call> -> ID ( <param-list> ))
(59, '+') ('REDUCE', <atom> -> number)
(59, '-') ('REDUCE', <atom> -> number)
(59, '*') ('REDUCE', <atom> -> number)
(59, '>') ('REDUCE', <atom> -> number)
(59, '<') ('REDUCE', <atom> -> number)
(59, '/') ('REDUCE', <atom> -> number)
(59, '>=') ('REDUCE', <atom> -> number)
(59, '=<') ('REDUCE', <atom> -> number)
(59, ')') ('REDUCE', <atom> -> number)
(59, '==') ('REDUCE', <atom> -> number)
(59, '!=') ('REDUCE', <atom> -> number)
(60, '<condition>') 117
(60, 'number') ('SHIFT', 59)
(60, '<expression>') 65
(60, '!') ('SHIFT', 61)
(60, '<factor>') 101
(60, 'ID') ('SHIFT', 54)
(60, '<condition>') 117
(60, 'ID') ('SHIFT', 54)
(60, '<boolean-value>') 134
(60, '<aritmetic-operation>') 157
(60, '(') ('SHIFT', 60)
(60, '(') ('SHIFT', 60)
(60, '<conditional-expresssion>') 158
(60, 'ID') ('SHIFT', 54)
(60, '<aritmetic-operation>') 157
(60, '<function-call>') 110
(60, '<factor>') 101
(60, '<expression>') 65
(60, '<expression>') 65
(60, '<expression>') 65
(60, '<factor>') 101
(60, 'false') ('SHIFT', 64)
(60, '<expression>') 65
(60, '<atom>') 107
(60, '<condition>') 117
(60, 'true') ('SHIFT', 63)
(60, '<comparation>') 135
(60, '<atom>') 107
(60, '<expression>') 65
(60, '<atom>') 107
(61, '<atom>') 125
(61, 'false') ('SHIFT', 139)
(61, '<expression>') 140
(61, '<expression>') 140
(61, '<expression>') 140
(61, '<condition>') 154
(61, '<atom>') 125
(61, '<expression>') 140
(61, 'number') ('SHIFT', 52)
(61, '<factor>') 120
(61, '<atom>') 125
(61, 'ID') ('SHIFT', 3)
(61, 'true') ('SHIFT', 138)
(61, 'ID') ('SHIFT', 3)
(61, '<comparation>') 156
(61, '<expression>') 140
(61, '(') ('SHIFT', 62)
(61, '<expression>') 140
(61, 'ID') ('SHIFT', 3)
(61, '<function-call>') 128
(61, '<factor>') 120
(61, '<factor>') 120
(61, '<boolean-value>') 155
(61, '<aritmetic-operation>') 119
(61, '(') ('SHIFT', 62)
(62, '<conditional-expresssion>') 115
(62, '<condition>') 117
(62, 'number') ('SHIFT', 59)
(62, '<expression>') 65
(62, '!') ('SHIFT', 61)
(62, '<factor>') 101
(62, 'ID') ('SHIFT', 54)
(62, '<condition>') 117
(62, 'ID') ('SHIFT', 54)
(62, '<boolean-value>') 134
(62, '<aritmetic-operation>') 99
(62, '(') ('SHIFT', 60)
(62, '(') ('SHIFT', 60)
(62, 'ID') ('SHIFT', 54)
(62, '<function-call>') 110
(62, '<factor>') 101
(62, '<expression>') 65
(62, '<expression>') 65
(62, '<expression>') 65
(62, '<factor>') 101
(62, 'false') ('SHIFT', 64)
(62, '<expression>') 65
(62, '<aritmetic-operation>') 99
(62, '<atom>') 107
(62, '<condition>') 117
(62, 'true') ('SHIFT', 63)
(62, '<comparation>') 135
(62, '<atom>') 107
(62, '<expression>') 65
(62, '<atom>') 107
(63, '|') ('REDUCE', <boolean-value> -> true)
(63, '&') ('REDUCE', <boolean-value> -> true)
(63, ')') ('REDUCE', <boolean-value> -> true)
(64, '|') ('REDUCE', <boolean-value> -> false)
(64, '&') ('REDUCE', <boolean-value> -> false)
(64, ')') ('REDUCE', <boolean-value> -> false)
(65, '=<') ('SHIFT', 93)
(65, '>=') ('SHIFT', 91)
(65, '==') ('SHIFT', 95)
(65, '>') ('SHIFT', 66)
(65, '<') ('SHIFT', 89)
(65, '!=') ('SHIFT', 97)
(66, '<factor>') 78
(66, 'ID') ('SHIFT', 67)
(66, '<expression>') 76
(66, '<atom>') 81
(66, 'ID') ('SHIFT', 67)
(66, '<factor>') 78
(66, '<aritmetic-operation>') 77
(66, '<factor>') 78
(66, '(') ('SHIFT', 73)
(66, 'ID') ('SHIFT', 67)
(66, '<atom>') 81
(66, '<function-call>') 84
(66, '<atom>') 81
(66, 'number') ('SHIFT', 72)
(67, '+') ('REDUCE', <atom> -> ID)
(67, '-') ('REDUCE', <atom> -> ID)
(67, '*') ('REDUCE', <atom> -> ID)
(67, '/') ('REDUCE', <atom> -> ID)
(67, '&') ('REDUCE', <atom> -> ID)
(67, '|') ('REDUCE', <atom> -> ID)
(67, ')') ('REDUCE', <atom> -> ID)
(67, '(') ('SHIFT', 68)
(67, '(') ('SHIFT', 68)
(68, '(') ('SHIFT', 8)
(68, 'ID') ('SHIFT', 5)
(68, '<function-call>') 21
(68, '<atom>') 18
(68, ')') ('SHIFT', 69)
(68, '<expression>') 12
(68, '<factor>') 15
(68, '<param-list>') 70
(68, 'number') ('SHIFT', 7)
(68, '<expression>') 12
(68, '<atom>') 18
(68, 'ID') ('SHIFT', 5)
(68, '<factor>') 15
(68, '<factor>') 15
(68, 'ID') ('SHIFT', 5)
(68, '<atom>') 18
(68, '<aritmetic-operation>') 14
(69, '+') ('REDUCE', <function-call> -> ID ( ))
(69, '-') ('REDUCE', <function-call> -> ID ( ))
(69, '*') ('REDUCE', <function-call> -> ID ( ))
(69, '/') ('REDUCE', <function-call> -> ID ( ))
(69, '&') ('REDUCE', <function-call> -> ID ( ))
(69, '|') ('REDUCE', <function-call> -> ID ( ))
(69, ')') ('REDUCE', <function-call> -> ID ( ))
(70, ')') ('SHIFT', 71)
(71, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(71, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(71, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(71, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(71, '&') ('REDUCE', <function-call> -> ID ( <param-list> ))
(71, '|') ('REDUCE', <function-call> -> ID ( <param-list> ))
(71, ')') ('REDUCE', <function-call> -> ID ( <param-list> ))
(72, '+') ('REDUCE', <atom> -> number)
(72, '-') ('REDUCE', <atom> -> number)
(72, '*') ('REDUCE', <atom> -> number)
(72, '/') ('REDUCE', <atom> -> number)
(72, '&') ('REDUCE', <atom> -> number)
(72, '|') ('REDUCE', <atom> -> number)
(72, ')') ('REDUCE', <atom> -> number)
(73, '<factor>') 33
(73, '<factor>') 33
(73, 'ID') ('SHIFT', 9)
(73, 'ID') ('SHIFT', 9)
(73, '<factor>') 33
(73, '<atom>') 36
(73, '(') ('SHIFT', 30)
(73, '<aritmetic-operation>') 74
(73, 'ID') ('SHIFT', 9)
(73, '<function-call>') 39
(73, '<atom>') 36
(73, '<atom>') 36
(73, 'number') ('SHIFT', 29)
(74, ')') ('SHIFT', 75)
(75, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(75, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(75, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(75, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(75, '&') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(75, '|') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(75, ')') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(76, '|') ('REDUCE', <comparation> -> <expression> > <expression>)
(76, '&') ('REDUCE', <comparation> -> <expression> > <expression>)
(76, ')') ('REDUCE', <comparation> -> <expression> > <expression>)
(77, '|') ('REDUCE', <expression> -> <aritmetic-operation>)
(77, '&') ('REDUCE', <expression> -> <aritmetic-operation>)
(77, ')') ('REDUCE', <expression> -> <aritmetic-operation>)
(78, '+') ('SHIFT', 79)
(78, '-') ('SHIFT', 87)
(78, '|') ('REDUCE', <aritmetic-operation> -> <factor>)
(78, '&') ('REDUCE', <aritmetic-operation> -> <factor>)
(78, ')') ('REDUCE', <aritmetic-operation> -> <factor>)
(79, '<factor>') 78
(79, 'ID') ('SHIFT', 67)
(79, '<atom>') 81
(79, '<factor>') 78
(79, 'ID') ('SHIFT', 67)
(79, '<factor>') 78
(79, '<aritmetic-operation>') 80
(79, '(') ('SHIFT', 73)
(79, 'ID') ('SHIFT', 67)
(79, '<atom>') 81
(79, '<function-call>') 84
(79, '<atom>') 81
(79, 'number') ('SHIFT', 72)
(80, '|') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(80, '&') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(80, ')') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(81, '/') ('SHIFT', 85)
(81, '+') ('REDUCE', <factor> -> <atom>)
(81, '-') ('REDUCE', <factor> -> <atom>)
(81, '&') ('REDUCE', <factor> -> <atom>)
(81, '|') ('REDUCE', <factor> -> <atom>)
(81, ')') ('REDUCE', <factor> -> <atom>)
(81, '*') ('SHIFT', 82)
(82, 'ID') ('SHIFT', 67)
(82, '<atom>') 81
(82, 'ID') ('SHIFT', 67)
(82, '<factor>') 83
(82, '(') ('SHIFT', 73)
(82, 'ID') ('SHIFT', 67)
(82, '<function-call>') 84
(82, '<atom>') 81
(82, '<atom>') 81
(82, 'number') ('SHIFT', 72)
(83, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(83, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(83, '&') ('REDUCE', <factor> -> <atom> * <factor>)
(83, '|') ('REDUCE', <factor> -> <atom> * <factor>)
(83, ')') ('REDUCE', <factor> -> <atom> * <factor>)
(84, '+') ('REDUCE', <atom> -> <function-call>)
(84, '-') ('REDUCE', <atom> -> <function-call>)
(84, '*') ('REDUCE', <atom> -> <function-call>)
(84, '/') ('REDUCE', <atom> -> <function-call>)
(84, '&') ('REDUCE', <atom> -> <function-call>)
(84, '|') ('REDUCE', <atom> -> <function-call>)
(84, ')') ('REDUCE', <atom> -> <function-call>)
(85, 'ID') ('SHIFT', 67)
(85, '<atom>') 81
(85, 'ID') ('SHIFT', 67)
(85, '<factor>') 86
(85, '(') ('SHIFT', 73)
(85, 'ID') ('SHIFT', 67)
(85, '<function-call>') 84
(85, '<atom>') 81
(85, '<atom>') 81
(85, 'number') ('SHIFT', 72)
(86, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(86, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(86, '&') ('REDUCE', <factor> -> <atom> / <factor>)
(86, '|') ('REDUCE', <factor> -> <atom> / <factor>)
(86, ')') ('REDUCE', <factor> -> <atom> / <factor>)
(87, '<factor>') 78
(87, 'ID') ('SHIFT', 67)
(87, '<atom>') 81
(87, '<factor>') 78
(87, 'ID') ('SHIFT', 67)
(87, '<factor>') 78
(87, '(') ('SHIFT', 73)
(87, 'ID') ('SHIFT', 67)
(87, '<atom>') 81
(87, '<function-call>') 84
(87, '<aritmetic-operation>') 88
(87, '<atom>') 81
(87, 'number') ('SHIFT', 72)
(88, '|') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(88, '&') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(88, ')') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(89, '<factor>') 78
(89, 'ID') ('SHIFT', 67)
(89, '<atom>') 81
(89, '<factor>') 78
(89, 'ID') ('SHIFT', 67)
(89, '<factor>') 78
(89, '<aritmetic-operation>') 77
(89, '<expression>') 90
(89, '(') ('SHIFT', 73)
(89, 'ID') ('SHIFT', 67)
(89, '<atom>') 81
(89, '<function-call>') 84
(89, '<atom>') 81
(89, 'number') ('SHIFT', 72)
(90, '|') ('REDUCE', <comparation> -> <expression> < <expression>)
(90, '&') ('REDUCE', <comparation> -> <expression> < <expression>)
(90, ')') ('REDUCE', <comparation> -> <expression> < <expression>)
(91, '<factor>') 78
(91, 'ID') ('SHIFT', 67)
(91, '<atom>') 81
(91, '<factor>') 78
(91, '<expression>') 92
(91, '<factor>') 78
(91, 'ID') ('SHIFT', 67)
(91, '<aritmetic-operation>') 77
(91, '(') ('SHIFT', 73)
(91, 'ID') ('SHIFT', 67)
(91, '<atom>') 81
(91, '<function-call>') 84
(91, '<atom>') 81
(91, 'number') ('SHIFT', 72)
(92, '|') ('REDUCE', <comparation> -> <expression> >= <expression>)
(92, '&') ('REDUCE', <comparation> -> <expression> >= <expression>)
(92, ')') ('REDUCE', <comparation> -> <expression> >= <expression>)
(93, '<factor>') 78
(93, 'ID') ('SHIFT', 67)
(93, '<atom>') 81
(93, '<factor>') 78
(93, 'ID') ('SHIFT', 67)
(93, '<factor>') 78
(93, '<aritmetic-operation>') 77
(93, '(') ('SHIFT', 73)
(93, 'ID') ('SHIFT', 67)
(93, '<atom>') 81
(93, '<function-call>') 84
(93, '<expression>') 94
(93, '<atom>') 81
(93, 'number') ('SHIFT', 72)
(94, '|') ('REDUCE', <comparation> -> <expression> =< <expression>)
(94, '&') ('REDUCE', <comparation> -> <expression> =< <expression>)
(94, ')') ('REDUCE', <comparation> -> <expression> =< <expression>)
(95, '<factor>') 78
(95, 'ID') ('SHIFT', 67)
(95, '<atom>') 81
(95, '<factor>') 78
(95, 'ID') ('SHIFT', 67)
(95, '<factor>') 78
(95, '<expression>') 96
(95, '<aritmetic-operation>') 77
(95, '(') ('SHIFT', 73)
(95, 'ID') ('SHIFT', 67)
(95, '<atom>') 81
(95, '<function-call>') 84
(95, '<atom>') 81
(95, 'number') ('SHIFT', 72)
(96, '|') ('REDUCE', <comparation> -> <expression> == <expression>)
(96, '&') ('REDUCE', <comparation> -> <expression> == <expression>)
(96, ')') ('REDUCE', <comparation> -> <expression> == <expression>)
(97, '<factor>') 78
(97, 'ID') ('SHIFT', 67)
(97, '<atom>') 81
(97, '<factor>') 78
(97, 'ID') ('SHIFT', 67)
(97, '<factor>') 78
(97, '<aritmetic-operation>') 77
(97, '(') ('SHIFT', 73)
(97, 'ID') ('SHIFT', 67)
(97, '<atom>') 81
(97, '<function-call>') 84
(97, '<atom>') 81
(97, 'number') ('SHIFT', 72)
(97, '<expression>') 98
(98, '|') ('REDUCE', <comparation> -> <expression> != <expression>)
(98, '&') ('REDUCE', <comparation> -> <expression> != <expression>)
(98, ')') ('REDUCE', <comparation> -> <expression> != <expression>)
(99, '>') ('REDUCE', <expression> -> <aritmetic-operation>)
(99, '<') ('REDUCE', <expression> -> <aritmetic-operation>)
(99, '>=') ('REDUCE', <expression> -> <aritmetic-operation>)
(99, '=<') ('REDUCE', <expression> -> <aritmetic-operation>)
(99, '==') ('REDUCE', <expression> -> <aritmetic-operation>)
(99, '!=') ('REDUCE', <expression> -> <aritmetic-operation>)
(99, ')') ('SHIFT', 100)
(100, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '>') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '<') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '>=') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '=<') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '==') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(100, '!=') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(101, '-') ('SHIFT', 113)
(101, '>') ('REDUCE', <aritmetic-operation> -> <factor>)
(101, '<') ('REDUCE', <aritmetic-operation> -> <factor>)
(101, '>=') ('REDUCE', <aritmetic-operation> -> <factor>)
(101, '=<') ('REDUCE', <aritmetic-operation> -> <factor>)
(101, ')') ('REDUCE', <aritmetic-operation> -> <factor>)
(101, '==') ('REDUCE', <aritmetic-operation> -> <factor>)
(101, '!=') ('REDUCE', <aritmetic-operation> -> <factor>)
(101, '+') ('SHIFT', 102)
(102, '<atom>') 107
(102, '<atom>') 107
(102, '<atom>') 107
(102, '<factor>') 101
(102, 'ID') ('SHIFT', 54)
(102, 'ID') ('SHIFT', 54)
(102, '<aritmetic-operation>') 106
(102, '<factor>') 101
(102, '(') ('SHIFT', 103)
(102, 'ID') ('SHIFT', 54)
(102, '<function-call>') 110
(102, '<factor>') 101
(102, 'number') ('SHIFT', 59)
(103, '<factor>') 33
(103, '<factor>') 33
(103, 'ID') ('SHIFT', 9)
(103, 'ID') ('SHIFT', 9)
(103, '<factor>') 33
(103, '<atom>') 36
(103, '(') ('SHIFT', 30)
(103, 'ID') ('SHIFT', 9)
(103, '<function-call>') 39
(103, '<atom>') 36
(103, '<atom>') 36
(103, '<aritmetic-operation>') 104
(103, 'number') ('SHIFT', 29)
(104, ')') ('SHIFT', 105)
(105, '!=') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '>') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '<') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '>=') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '=<') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, '==') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(105, ')') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(106, '>') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(106, '<') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(106, '>=') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(106, '=<') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(106, ')') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(106, '==') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(106, '!=') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(107, '!=') ('REDUCE', <factor> -> <atom>)
(107, '+') ('REDUCE', <factor> -> <atom>)
(107, '-') ('REDUCE', <factor> -> <atom>)
(107, '>') ('REDUCE', <factor> -> <atom>)
(107, '<') ('REDUCE', <factor> -> <atom>)
(107, '>=') ('REDUCE', <factor> -> <atom>)
(107, '=<') ('REDUCE', <factor> -> <atom>)
(107, '==') ('REDUCE', <factor> -> <atom>)
(107, ')') ('REDUCE', <factor> -> <atom>)
(107, '/') ('SHIFT', 111)
(107, '*') ('SHIFT', 108)
(108, '<atom>') 107
(108, '<atom>') 107
(108, '<atom>') 107
(108, 'ID') ('SHIFT', 54)
(108, 'ID') ('SHIFT', 54)
(108, '<factor>') 109
(108, '(') ('SHIFT', 103)
(108, 'ID') ('SHIFT', 54)
(108, '<function-call>') 110
(108, 'number') ('SHIFT', 59)
(109, '!=') ('REDUCE', <factor> -> <atom> * <factor>)
(109, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(109, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(109, '>') ('REDUCE', <factor> -> <atom> * <factor>)
(109, '<') ('REDUCE', <factor> -> <atom> * <factor>)
(109, '>=') ('REDUCE', <factor> -> <atom> * <factor>)
(109, '=<') ('REDUCE', <factor> -> <atom> * <factor>)
(109, '==') ('REDUCE', <factor> -> <atom> * <factor>)
(109, ')') ('REDUCE', <factor> -> <atom> * <factor>)
(110, '+') ('REDUCE', <atom> -> <function-call>)
(110, '-') ('REDUCE', <atom> -> <function-call>)
(110, '*') ('REDUCE', <atom> -> <function-call>)
(110, '>') ('REDUCE', <atom> -> <function-call>)
(110, '<') ('REDUCE', <atom> -> <function-call>)
(110, '/') ('REDUCE', <atom> -> <function-call>)
(110, '>=') ('REDUCE', <atom> -> <function-call>)
(110, '=<') ('REDUCE', <atom> -> <function-call>)
(110, ')') ('REDUCE', <atom> -> <function-call>)
(110, '==') ('REDUCE', <atom> -> <function-call>)
(110, '!=') ('REDUCE', <atom> -> <function-call>)
(111, '<atom>') 107
(111, '<atom>') 107
(111, '<factor>') 112
(111, '<atom>') 107
(111, 'ID') ('SHIFT', 54)
(111, 'ID') ('SHIFT', 54)
(111, '(') ('SHIFT', 103)
(111, 'ID') ('SHIFT', 54)
(111, '<function-call>') 110
(111, 'number') ('SHIFT', 59)
(112, '!=') ('REDUCE', <factor> -> <atom> / <factor>)
(112, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(112, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(112, '>') ('REDUCE', <factor> -> <atom> / <factor>)
(112, '<') ('REDUCE', <factor> -> <atom> / <factor>)
(112, '>=') ('REDUCE', <factor> -> <atom> / <factor>)
(112, '=<') ('REDUCE', <factor> -> <atom> / <factor>)
(112, '==') ('REDUCE', <factor> -> <atom> / <factor>)
(112, ')') ('REDUCE', <factor> -> <atom> / <factor>)
(113, '<atom>') 107
(113, '<atom>') 107
(113, '<atom>') 107
(113, '<factor>') 101
(113, 'ID') ('SHIFT', 54)
(113, 'ID') ('SHIFT', 54)
(113, '<factor>') 101
(113, '<aritmetic-operation>') 114
(113, '(') ('SHIFT', 103)
(113, 'ID') ('SHIFT', 54)
(113, '<function-call>') 110
(113, '<factor>') 101
(113, 'number') ('SHIFT', 59)
(114, '>') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(114, '<') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(114, '>=') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(114, '=<') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(114, ')') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(114, '==') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(114, '!=') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(115, ')') ('SHIFT', 116)
(116, ')') ('REDUCE', <condition> -> ( <conditional-expresssion> ))
(117, '&') ('SHIFT', 118)
(117, '|') ('SHIFT', 136)
(117, ')') ('REDUCE', <conditional-expresssion> -> <condition>)
(118, '<condition>') 117
(118, '<atom>') 125
(118, '<expression>') 65
(118, '!') ('SHIFT', 61)
(118, '<condition>') 117
(118, '<atom>') 125
(118, '<boolean-value>') 134
(118, '<conditional-expresssion>') 133
(118, 'number') ('SHIFT', 52)
(118, '(') ('SHIFT', 53)
(118, '<factor>') 120
(118, '<atom>') 125
(118, 'ID') ('SHIFT', 3)
(118, 'ID') ('SHIFT', 3)
(118, '<expression>') 65
(118, '<expression>') 65
(118, '<expression>') 65
(118, '(') ('SHIFT', 53)
(118, 'false') ('SHIFT', 64)
(118, 'ID') ('SHIFT', 3)
(118, '<expression>') 65
(118, '<function-call>') 128
(118, '<factor>') 120
(118, '<factor>') 120
(118, '<condition>') 117
(118, 'true') ('SHIFT', 63)
(118, '<comparation>') 135
(118, '<aritmetic-operation>') 119
(118, '<expression>') 65
(119, '>') ('REDUCE', <expression> -> <aritmetic-operation>)
(119, '<') ('REDUCE', <expression> -> <aritmetic-operation>)
(119, '>=') ('REDUCE', <expression> -> <aritmetic-operation>)
(119, '=<') ('REDUCE', <expression> -> <aritmetic-operation>)
(119, '==') ('REDUCE', <expression> -> <aritmetic-operation>)
(119, '!=') ('REDUCE', <expression> -> <aritmetic-operation>)
(120, '>') ('REDUCE', <aritmetic-operation> -> <factor>)
(120, '<') ('REDUCE', <aritmetic-operation> -> <factor>)
(120, '>=') ('REDUCE', <aritmetic-operation> -> <factor>)
(120, '=<') ('REDUCE', <aritmetic-operation> -> <factor>)
(120, '==') ('REDUCE', <aritmetic-operation> -> <factor>)
(120, '!=') ('REDUCE', <aritmetic-operation> -> <factor>)
(120, '+') ('SHIFT', 121)
(120, '-') ('SHIFT', 131)
(121, '<atom>') 125
(121, '(') ('SHIFT', 122)
(121, 'ID') ('SHIFT', 3)
(121, '<function-call>') 128
(121, '<atom>') 125
(121, '<factor>') 120
(121, '<factor>') 120
(121, '<atom>') 125
(121, 'number') ('SHIFT', 52)
(121, '<factor>') 120
(121, 'ID') ('SHIFT', 3)
(121, 'ID') ('SHIFT', 3)
(121, '<aritmetic-operation>') 124
(122, '<factor>') 33
(122, '<factor>') 33
(122, 'ID') ('SHIFT', 9)
(122, '<aritmetic-operation>') 123
(122, 'ID') ('SHIFT', 9)
(122, '<factor>') 33
(122, '<atom>') 36
(122, '(') ('SHIFT', 30)
(122, 'ID') ('SHIFT', 9)
(122, '<function-call>') 39
(122, '<atom>') 36
(122, '<atom>') 36
(122, 'number') ('SHIFT', 29)
(123, ')') ('SHIFT', 100)
(124, '>') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(124, '<') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(124, '>=') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(124, '=<') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(124, '==') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(124, '!=') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(125, '*') ('SHIFT', 126)
(125, '+') ('REDUCE', <factor> -> <atom>)
(125, '-') ('REDUCE', <factor> -> <atom>)
(125, '>') ('REDUCE', <factor> -> <atom>)
(125, '<') ('REDUCE', <factor> -> <atom>)
(125, '>=') ('REDUCE', <factor> -> <atom>)
(125, '=<') ('REDUCE', <factor> -> <atom>)
(125, '==') ('REDUCE', <factor> -> <atom>)
(125, '!=') ('REDUCE', <factor> -> <atom>)
(125, '/') ('SHIFT', 129)
(126, '<atom>') 125
(126, '(') ('SHIFT', 122)
(126, 'ID') ('SHIFT', 3)
(126, '<factor>') 127
(126, '<function-call>') 128
(126, '<atom>') 125
(126, '<atom>') 125
(126, 'number') ('SHIFT', 52)
(126, 'ID') ('SHIFT', 3)
(126, 'ID') ('SHIFT', 3)
(127, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(127, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(127, '>') ('REDUCE', <factor> -> <atom> * <factor>)
(127, '<') ('REDUCE', <factor> -> <atom> * <factor>)
(127, '>=') ('REDUCE', <factor> -> <atom> * <factor>)
(127, '=<') ('REDUCE', <factor> -> <atom> * <factor>)
(127, '==') ('REDUCE', <factor> -> <atom> * <factor>)
(127, '!=') ('REDUCE', <factor> -> <atom> * <factor>)
(128, '+') ('REDUCE', <atom> -> <function-call>)
(128, '-') ('REDUCE', <atom> -> <function-call>)
(128, '*') ('REDUCE', <atom> -> <function-call>)
(128, '>') ('REDUCE', <atom> -> <function-call>)
(128, '<') ('REDUCE', <atom> -> <function-call>)
(128, '/') ('REDUCE', <atom> -> <function-call>)
(128, '>=') ('REDUCE', <atom> -> <function-call>)
(128, '=<') ('REDUCE', <atom> -> <function-call>)
(128, '==') ('REDUCE', <atom> -> <function-call>)
(128, '!=') ('REDUCE', <atom> -> <function-call>)
(129, '<atom>') 125
(129, '(') ('SHIFT', 122)
(129, 'ID') ('SHIFT', 3)
(129, '<function-call>') 128
(129, '<atom>') 125
(129, '<atom>') 125
(129, 'number') ('SHIFT', 52)
(129, '<factor>') 130
(129, 'ID') ('SHIFT', 3)
(129, 'ID') ('SHIFT', 3)
(130, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(130, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(130, '>') ('REDUCE', <factor> -> <atom> / <factor>)
(130, '<') ('REDUCE', <factor> -> <atom> / <factor>)
(130, '>=') ('REDUCE', <factor> -> <atom> / <factor>)
(130, '=<') ('REDUCE', <factor> -> <atom> / <factor>)
(130, '==') ('REDUCE', <factor> -> <atom> / <factor>)
(130, '!=') ('REDUCE', <factor> -> <atom> / <factor>)
(131, '<atom>') 125
(131, '<aritmetic-operation>') 132
(131, '(') ('SHIFT', 122)
(131, 'ID') ('SHIFT', 3)
(131, '<function-call>') 128
(131, '<atom>') 125
(131, '<factor>') 120
(131, '<factor>') 120
(131, '<atom>') 125
(131, 'number') ('SHIFT', 52)
(131, '<factor>') 120
(131, 'ID') ('SHIFT', 3)
(131, 'ID') ('SHIFT', 3)
(132, '>') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(132, '<') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(132, '>=') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(132, '=<') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(132, '==') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(132, '!=') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(133, ')') ('REDUCE', <conditional-expresssion> -> <condition> & <conditional-expresssion>)
(134, '|') ('REDUCE', <condition> -> <boolean-value>)
(134, '&') ('REDUCE', <condition> -> <boolean-value>)
(134, ')') ('REDUCE', <condition> -> <boolean-value>)
(135, '|') ('REDUCE', <condition> -> <comparation>)
(135, '&') ('REDUCE', <condition> -> <comparation>)
(135, ')') ('REDUCE', <condition> -> <comparation>)
(136, '<condition>') 117
(136, '<atom>') 125
(136, '<expression>') 65
(136, '!') ('SHIFT', 61)
(136, '<condition>') 117
(136, '<conditional-expresssion>') 137
(136, '<atom>') 125
(136, '<boolean-value>') 134
(136, 'number') ('SHIFT', 52)
(136, '(') ('SHIFT', 53)
(136, '<factor>') 120
(136, '<atom>') 125
(136, 'ID') ('SHIFT', 3)
(136, 'ID') ('SHIFT', 3)
(136, '<expression>') 65
(136, '<expression>') 65
(136, '<expression>') 65
(136, '(') ('SHIFT', 53)
(136, 'false') ('SHIFT', 64)
(136, 'ID') ('SHIFT', 3)
(136, '<expression>') 65
(136, '<function-call>') 128
(136, '<factor>') 120
(136, '<factor>') 120
(136, '<condition>') 117
(136, 'true') ('SHIFT', 63)
(136, '<comparation>') 135
(136, '<aritmetic-operation>') 119
(136, '<expression>') 65
(137, ')') ('REDUCE', <conditional-expresssion> -> <condition> | <conditional-expresssion>)
(138, ')') ('REDUCE', <boolean-value> -> true)
(139, ')') ('REDUCE', <boolean-value> -> false)
(140, '=<') ('SHIFT', 148)
(140, '<') ('SHIFT', 144)
(140, '>=') ('SHIFT', 146)
(140, '!=') ('SHIFT', 152)
(140, '==') ('SHIFT', 150)
(140, '>') ('SHIFT', 141)
(141, '<factor>') 33
(141, '<factor>') 33
(141, '<expression>') 142
(141, 'ID') ('SHIFT', 9)
(141, 'ID') ('SHIFT', 9)
(141, '<factor>') 33
(141, '<atom>') 36
(141, '<aritmetic-operation>') 143
(141, '(') ('SHIFT', 30)
(141, 'ID') ('SHIFT', 9)
(141, '<function-call>') 39
(141, '<atom>') 36
(141, '<atom>') 36
(141, 'number') ('SHIFT', 29)
(142, ')') ('REDUCE', <comparation> -> <expression> > <expression>)
(143, ')') ('REDUCE', <expression> -> <aritmetic-operation>)
(144, '<factor>') 33
(144, '<factor>') 33
(144, 'ID') ('SHIFT', 9)
(144, 'ID') ('SHIFT', 9)
(144, '<expression>') 145
(144, '<factor>') 33
(144, '<atom>') 36
(144, '<aritmetic-operation>') 143
(144, '(') ('SHIFT', 30)
(144, 'ID') ('SHIFT', 9)
(144, '<function-call>') 39
(144, '<atom>') 36
(144, '<atom>') 36
(144, 'number') ('SHIFT', 29)
(145, ')') ('REDUCE', <comparation> -> <expression> < <expression>)
(146, '<factor>') 33
(146, '<factor>') 33
(146, 'ID') ('SHIFT', 9)
(146, 'ID') ('SHIFT', 9)
(146, '<expression>') 147
(146, '<factor>') 33
(146, '<atom>') 36
(146, '<aritmetic-operation>') 143
(146, '(') ('SHIFT', 30)
(146, 'ID') ('SHIFT', 9)
(146, '<function-call>') 39
(146, '<atom>') 36
(146, '<atom>') 36
(146, 'number') ('SHIFT', 29)
(147, ')') ('REDUCE', <comparation> -> <expression> >= <expression>)
(148, '<factor>') 33
(148, '<factor>') 33
(148, 'ID') ('SHIFT', 9)
(148, 'ID') ('SHIFT', 9)
(148, '<factor>') 33
(148, '<atom>') 36
(148, '<aritmetic-operation>') 143
(148, '(') ('SHIFT', 30)
(148, 'ID') ('SHIFT', 9)
(148, '<function-call>') 39
(148, '<atom>') 36
(148, '<atom>') 36
(148, '<expression>') 149
(148, 'number') ('SHIFT', 29)
(149, ')') ('REDUCE', <comparation> -> <expression> =< <expression>)
(150, '<factor>') 33
(150, '<factor>') 33
(150, 'ID') ('SHIFT', 9)
(150, '<expression>') 151
(150, 'ID') ('SHIFT', 9)
(150, '<factor>') 33
(150, '<atom>') 36
(150, '<aritmetic-operation>') 143
(150, '(') ('SHIFT', 30)
(150, 'ID') ('SHIFT', 9)
(150, '<function-call>') 39
(150, '<atom>') 36
(150, '<atom>') 36
(150, 'number') ('SHIFT', 29)
(151, ')') ('REDUCE', <comparation> -> <expression> == <expression>)
(152, '<factor>') 33
(152, '<factor>') 33
(152, 'ID') ('SHIFT', 9)
(152, 'ID') ('SHIFT', 9)
(152, '<factor>') 33
(152, '<atom>') 36
(152, '<aritmetic-operation>') 143
(152, '(') ('SHIFT', 30)
(152, '<expression>') 153
(152, 'ID') ('SHIFT', 9)
(152, '<function-call>') 39
(152, '<atom>') 36
(152, '<atom>') 36
(152, 'number') ('SHIFT', 29)
(153, ')') ('REDUCE', <comparation> -> <expression> != <expression>)
(154, ')') ('REDUCE', <conditional-expresssion> -> ! <condition>)
(155, ')') ('REDUCE', <condition> -> <boolean-value>)
(156, ')') ('REDUCE', <condition> -> <comparation>)
(157, '>') ('REDUCE', <expression> -> <aritmetic-operation>)
(157, '<') ('REDUCE', <expression> -> <aritmetic-operation>)
(157, '>=') ('REDUCE', <expression> -> <aritmetic-operation>)
(157, '=<') ('REDUCE', <expression> -> <aritmetic-operation>)
(157, '==') ('REDUCE', <expression> -> <aritmetic-operation>)
(157, '!=') ('REDUCE', <expression> -> <aritmetic-operation>)
(157, ')') ('SHIFT', 105)
(158, ')') ('SHIFT', 159)
(159, '|') ('REDUCE', <condition> -> ( <conditional-expresssion> ))
(159, '&') ('REDUCE', <condition> -> ( <conditional-expresssion> ))
(159, ')') ('REDUCE', <condition> -> ( <conditional-expresssion> ))
(160, ')') ('SHIFT', 161)
(161, '{') ('SHIFT', 162)
(161, '{') ('SHIFT', 162)
(161, '<scope>') 286
(162, '<aritmetic-operation>') 225
(162, 'if') ('SHIFT', 217)
(162, '<inst-list>') 284
(162, 'number') ('SHIFT', 213)
(162, '{') ('SHIFT', 162)
(162, '<expression>') 247
(162, '<atom>') 229
(162, 'ID') ('SHIFT', 222)
(162, 'ID') ('SHIFT', 222)
(162, '<atom>') 229
(162, '<for-loop>') 255
(162, '<factor>') 226
(162, 'ID') ('SHIFT', 222)
(162, '<atom>') 229
(162, '{') ('SHIFT', 162)
(162, '<full-conditional>') 253
(162, 'for') ('SHIFT', 163)
(162, '<inst>') 243
(162, '<var-asign>') 250
(162, '<factor>') 226
(162, '<inline-conditional>') 252
(162, 'if') ('SHIFT', 217)
(162, 'ID') ('SHIFT', 222)
(162, 'let') ('SHIFT', 170)
(162, '}') ('SHIFT', 169)
(162, 'if') ('SHIFT', 217)
(162, '<conditional>') 251
(162, 'if') ('SHIFT', 217)
(162, '<var-dec>') 246
(162, '<while-loop>') 254
(162, '(') ('SHIFT', 214)
(162, '<function-call>') 232
(162, '<scope>') 249
(162, '<inst>') 243
(162, '<flux-control>') 248
(162, 'while') ('SHIFT', 1)
(162, '<factor>') 226
(163, '(') ('SHIFT', 164)
(164, 'ID') ('SHIFT', 165)
(165, '<iterable-expression>') 166
(166, ')') ('SHIFT', 167)
(167, '{') ('SHIFT', 162)
(167, '{') ('SHIFT', 162)
(167, '<scope>') 168
(168, ';') ('REDUCE', <for-loop> -> for ( ID <iterable-expression> ) <scope>)
(169, ';') ('REDUCE', <scope> -> { })
(170, '<vat-init-list>') 206
(170, 'ID') ('SHIFT', 171)
(170, 'ID') ('SHIFT', 171)
(170, '<var-init>') 175
(170, '<identifier>') 178
(170, '<var-init>') 175
(170, '<identifier>') 178
(171, ':') ('SHIFT', 172)
(171, '=') ('REDUCE', <identifier> -> ID)
(171, '<type-anotation>') 174
(172, 'Number') ('SHIFT', 173)
(173, '=') ('REDUCE', <type-anotation> -> : Number)
(174, '=') ('REDUCE', <identifier> -> ID <type-anotation>)
(175, 'in') ('REDUCE', <vat-init-list> -> <var-init>)
(175, ',') ('SHIFT', 176)
(176, '<var-init>') 175
(176, 'ID') ('SHIFT', 171)
(176, '<identifier>') 178
(176, 'ID') ('SHIFT', 171)
(176, '<var-init>') 175
(176, '<vat-init-list>') 177
(176, '<identifier>') 178
(177, 'in') ('REDUCE', <vat-init-list> -> <var-init> , <vat-init-list>)
(178, '=') ('SHIFT', 179)
(178, '=') ('SHIFT', 179)
(179, 'number') ('SHIFT', 187)
(179, '<expression>') 204
(179, '<atom>') 196
(179, '<factor>') 193
(179, 'ID') ('SHIFT', 180)
(179, '<atom>') 196
(179, 'ID') ('SHIFT', 180)
(179, '(') ('SHIFT', 188)
(179, 'ID') ('SHIFT', 180)
(179, '<function-call>') 199
(179, '<factor>') 193
(179, '<factor>') 193
(179, '<aritmetic-operation>') 192
(179, 'ID') ('SHIFT', 180)
(179, '<var-asign>') 205
(179, '<atom>') 196
(180, '(') ('SHIFT', 183)
(180, ':=') ('SHIFT', 181)
(180, ',') ('REDUCE', <atom> -> ID)
(180, '+') ('REDUCE', <atom> -> ID)
(180, '-') ('REDUCE', <atom> -> ID)
(180, '*') ('REDUCE', <atom> -> ID)
(180, '/') ('REDUCE', <atom> -> ID)
(180, 'in') ('REDUCE', <atom> -> ID)
(180, '(') ('SHIFT', 183)
(181, 'number') ('SHIFT', 187)
(181, '<factor>') 193
(181, '<atom>') 196
(181, '<factor>') 193
(181, '<aritmetic-operation>') 192
(181, 'ID') ('SHIFT', 182)
(181, '<expression>') 191
(181, '<atom>') 196
(181, 'ID') ('SHIFT', 182)
(181, '(') ('SHIFT', 188)
(181, 'ID') ('SHIFT', 182)
(181, '<function-call>') 199
(181, '<factor>') 193
(181, '<atom>') 196
(182, '(') ('SHIFT', 183)
(182, ',') ('REDUCE', <atom> -> ID)
(182, '+') ('REDUCE', <atom> -> ID)
(182, '-') ('REDUCE', <atom> -> ID)
(182, '*') ('REDUCE', <atom> -> ID)
(182, '/') ('REDUCE', <atom> -> ID)
(182, 'in') ('REDUCE', <atom> -> ID)
(182, '(') ('SHIFT', 183)
(183, '(') ('SHIFT', 8)
(183, 'ID') ('SHIFT', 5)
(183, '<function-call>') 21
(183, '<atom>') 18
(183, '<expression>') 12
(183, ')') ('SHIFT', 184)
(183, '<factor>') 15
(183, 'number') ('SHIFT', 7)
(183, '<expression>') 12
(183, '<atom>') 18
(183, 'ID') ('SHIFT', 5)
(183, '<param-list>') 185
(183, '<factor>') 15
(183, '<factor>') 15
(183, 'ID') ('SHIFT', 5)
(183, '<atom>') 18
(183, '<aritmetic-operation>') 14
(184, ',') ('REDUCE', <function-call> -> ID ( ))
(184, '+') ('REDUCE', <function-call> -> ID ( ))
(184, '-') ('REDUCE', <function-call> -> ID ( ))
(184, '*') ('REDUCE', <function-call> -> ID ( ))
(184, '/') ('REDUCE', <function-call> -> ID ( ))
(184, 'in') ('REDUCE', <function-call> -> ID ( ))
(185, ')') ('SHIFT', 186)
(186, ',') ('REDUCE', <function-call> -> ID ( <param-list> ))
(186, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(186, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(186, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(186, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(186, 'in') ('REDUCE', <function-call> -> ID ( <param-list> ))
(187, ',') ('REDUCE', <atom> -> number)
(187, '+') ('REDUCE', <atom> -> number)
(187, '-') ('REDUCE', <atom> -> number)
(187, '*') ('REDUCE', <atom> -> number)
(187, '/') ('REDUCE', <atom> -> number)
(187, 'in') ('REDUCE', <atom> -> number)
(188, '<factor>') 33
(188, '<factor>') 33
(188, 'ID') ('SHIFT', 9)
(188, 'ID') ('SHIFT', 9)
(188, '<factor>') 33
(188, '<atom>') 36
(188, '(') ('SHIFT', 30)
(188, 'ID') ('SHIFT', 9)
(188, '<function-call>') 39
(188, '<atom>') 36
(188, '<atom>') 36
(188, '<aritmetic-operation>') 189
(188, 'number') ('SHIFT', 29)
(189, ')') ('SHIFT', 190)
(190, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(190, ',') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(190, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(190, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(190, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(190, 'in') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(191, ',') ('REDUCE', <var-asign> -> ID := <expression>)
(191, 'in') ('REDUCE', <var-asign> -> ID := <expression>)
(192, ',') ('REDUCE', <expression> -> <aritmetic-operation>)
(192, 'in') ('REDUCE', <expression> -> <aritmetic-operation>)
(193, '-') ('SHIFT', 202)
(193, ',') ('REDUCE', <aritmetic-operation> -> <factor>)
(193, 'in') ('REDUCE', <aritmetic-operation> -> <factor>)
(193, '+') ('SHIFT', 194)
(194, 'number') ('SHIFT', 187)
(194, '<factor>') 193
(194, '<atom>') 196
(194, '<factor>') 193
(194, 'ID') ('SHIFT', 182)
(194, '<atom>') 196
(194, 'ID') ('SHIFT', 182)
(194, '<aritmetic-operation>') 195
(194, '(') ('SHIFT', 188)
(194, 'ID') ('SHIFT', 182)
(194, '<function-call>') 199
(194, '<factor>') 193
(194, '<atom>') 196
(195, ',') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(195, 'in') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(196, '/') ('SHIFT', 200)
(196, '+') ('REDUCE', <factor> -> <atom>)
(196, ',') ('REDUCE', <factor> -> <atom>)
(196, 'in') ('REDUCE', <factor> -> <atom>)
(196, '-') ('REDUCE', <factor> -> <atom>)
(196, '*') ('SHIFT', 197)
(197, '<factor>') 198
(197, 'number') ('SHIFT', 187)
(197, '<atom>') 196
(197, 'ID') ('SHIFT', 182)
(197, '<atom>') 196
(197, 'ID') ('SHIFT', 182)
(197, '(') ('SHIFT', 188)
(197, 'ID') ('SHIFT', 182)
(197, '<function-call>') 199
(197, '<atom>') 196
(198, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(198, ',') ('REDUCE', <factor> -> <atom> * <factor>)
(198, 'in') ('REDUCE', <factor> -> <atom> * <factor>)
(198, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(199, ',') ('REDUCE', <atom> -> <function-call>)
(199, '+') ('REDUCE', <atom> -> <function-call>)
(199, '-') ('REDUCE', <atom> -> <function-call>)
(199, '*') ('REDUCE', <atom> -> <function-call>)
(199, '/') ('REDUCE', <atom> -> <function-call>)
(199, 'in') ('REDUCE', <atom> -> <function-call>)
(200, 'number') ('SHIFT', 187)
(200, '<atom>') 196
(200, 'ID') ('SHIFT', 182)
(200, '<atom>') 196
(200, 'ID') ('SHIFT', 182)
(200, '<factor>') 201
(200, '(') ('SHIFT', 188)
(200, 'ID') ('SHIFT', 182)
(200, '<function-call>') 199
(200, '<atom>') 196
(201, ',') ('REDUCE', <factor> -> <atom> / <factor>)
(201, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(201, 'in') ('REDUCE', <factor> -> <atom> / <factor>)
(201, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(202, 'number') ('SHIFT', 187)
(202, '<factor>') 193
(202, '<atom>') 196
(202, '<factor>') 193
(202, 'ID') ('SHIFT', 182)
(202, '<atom>') 196
(202, 'ID') ('SHIFT', 182)
(202, '(') ('SHIFT', 188)
(202, 'ID') ('SHIFT', 182)
(202, '<aritmetic-operation>') 203
(202, '<function-call>') 199
(202, '<factor>') 193
(202, '<atom>') 196
(203, ',') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(203, 'in') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(204, ',') ('REDUCE', <var-init> -> <identifier> = <expression>)
(204, 'in') ('REDUCE', <var-init> -> <identifier> = <expression>)
(205, ',') ('REDUCE', <var-init> -> <identifier> = <var-asign>)
(205, 'in') ('REDUCE', <var-init> -> <identifier> = <var-asign>)
(206, 'in') ('SHIFT', 207)
(207, '<aritmetic-operation>') 225
(207, 'if') ('SHIFT', 217)
(207, 'number') ('SHIFT', 213)
(207, '{') ('SHIFT', 162)
(207, '<atom>') 229
(207, '<var-decl-expr>') 283
(207, 'ID') ('SHIFT', 208)
(207, 'ID') ('SHIFT', 208)
(207, '<atom>') 229
(207, '<for-loop>') 255
(207, '<var-dec>') 279
(207, '<factor>') 226
(207, 'ID') ('SHIFT', 208)
(207, '<atom>') 229
(207, '{') ('SHIFT', 162)
(207, '<full-conditional>') 253
(207, '<factor>') 226
(207, 'for') ('SHIFT', 163)
(207, '<factor>') 226
(207, '<inline-conditional>') 252
(207, 'if') ('SHIFT', 217)
(207, '<flux-control>') 281
(207, 'let') ('SHIFT', 170)
(207, 'if') ('SHIFT', 217)
(207, '<conditional>') 251
(207, '<scope>') 282
(207, 'if') ('SHIFT', 217)
(207, '<while-loop>') 254
(207, '(') ('SHIFT', 214)
(207, '<function-call>') 232
(207, 'while') ('SHIFT', 1)
(207, '<expression>') 280
(208, '(') ('SHIFT', 209)
(208, ';') ('REDUCE', <atom> -> ID)
(208, '+') ('REDUCE', <atom> -> ID)
(208, '-') ('REDUCE', <atom> -> ID)
(208, '*') ('REDUCE', <atom> -> ID)
(208, '/') ('REDUCE', <atom> -> ID)
(208, '(') ('SHIFT', 209)
(209, '(') ('SHIFT', 8)
(209, 'ID') ('SHIFT', 5)
(209, '<param-list>') 211
(209, '<function-call>') 21
(209, '<atom>') 18
(209, '<expression>') 12
(209, ')') ('SHIFT', 210)
(209, '<factor>') 15
(209, 'number') ('SHIFT', 7)
(209, '<expression>') 12
(209, '<atom>') 18
(209, 'ID') ('SHIFT', 5)
(209, '<factor>') 15
(209, '<factor>') 15
(209, 'ID') ('SHIFT', 5)
(209, '<atom>') 18
(209, '<aritmetic-operation>') 14
(210, ';') ('REDUCE', <function-call> -> ID ( ))
(210, '+') ('REDUCE', <function-call> -> ID ( ))
(210, '-') ('REDUCE', <function-call> -> ID ( ))
(210, '*') ('REDUCE', <function-call> -> ID ( ))
(210, '/') ('REDUCE', <function-call> -> ID ( ))
(211, ')') ('SHIFT', 212)
(212, ';') ('REDUCE', <function-call> -> ID ( <param-list> ))
(212, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(212, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(212, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(212, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(213, ';') ('REDUCE', <atom> -> number)
(213, '+') ('REDUCE', <atom> -> number)
(213, '-') ('REDUCE', <atom> -> number)
(213, '*') ('REDUCE', <atom> -> number)
(213, '/') ('REDUCE', <atom> -> number)
(214, '<factor>') 33
(214, '<factor>') 33
(214, 'ID') ('SHIFT', 9)
(214, 'ID') ('SHIFT', 9)
(214, '<aritmetic-operation>') 215
(214, '<factor>') 33
(214, '<atom>') 36
(214, '(') ('SHIFT', 30)
(214, 'ID') ('SHIFT', 9)
(214, '<function-call>') 39
(214, '<atom>') 36
(214, '<atom>') 36
(214, 'number') ('SHIFT', 29)
(215, ')') ('SHIFT', 216)
(216, ';') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(216, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(216, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(216, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(216, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(217, '(') ('SHIFT', 218)
(217, '(') ('SHIFT', 218)
(217, '(') ('SHIFT', 218)
(217, '(') ('SHIFT', 218)
(218, '<factor>') 120
(218, '<expression>') 65
(218, '<expression>') 65
(218, '<expression>') 65
(218, '(') ('SHIFT', 53)
(218, '<function-call>') 128
(218, '<factor>') 120
(218, '<condition>') 117
(218, 'true') ('SHIFT', 63)
(218, '<conditional-expresssion>') 219
(218, '<condition>') 117
(218, '<atom>') 125
(218, '<expression>') 65
(218, '!') ('SHIFT', 61)
(218, '<condition>') 117
(218, '<atom>') 125
(218, '<boolean-value>') 134
(218, 'number') ('SHIFT', 52)
(218, '(') ('SHIFT', 53)
(218, '<atom>') 125
(218, 'ID') ('SHIFT', 3)
(218, 'ID') ('SHIFT', 3)
(218, 'false') ('SHIFT', 64)
(218, 'ID') ('SHIFT', 3)
(218, '<expression>') 65
(218, '<factor>') 120
(218, '<conditional-expresssion>') 219
(218, '<comparation>') 135
(218, '<conditional-expresssion>') 219
(218, '<conditional-expresssion>') 219
(218, '<aritmetic-operation>') 119
(218, '<expression>') 65
(219, ')') ('SHIFT', 220)
(219, ')') ('SHIFT', 220)
(219, ')') ('SHIFT', 220)
(219, ')') ('SHIFT', 220)
(220, '<expression>') 265
(220, '<atom>') 271
(220, '<factor>') 268
(220, '<function-call>') 274
(220, '<atom>') 271
(220, '{') ('SHIFT', 221)
(220, 'number') ('SHIFT', 261)
(220, '<atom>') 271
(220, 'ID') ('SHIFT', 256)
(220, 'ID') ('SHIFT', 256)
(220, '<factor>') 268
(220, '<factor>') 268
(220, '{') ('SHIFT', 221)
(220, '(') ('SHIFT', 262)
(220, '<aritmetic-operation>') 267
(220, 'ID') ('SHIFT', 256)
(220, '<expression>') 265
(221, '<aritmetic-operation>') 225
(221, 'if') ('SHIFT', 217)
(221, 'number') ('SHIFT', 213)
(221, '{') ('SHIFT', 162)
(221, '<expression>') 247
(221, '<atom>') 229
(221, 'ID') ('SHIFT', 222)
(221, 'ID') ('SHIFT', 222)
(221, '<atom>') 229
(221, '<for-loop>') 255
(221, '<factor>') 226
(221, '<inst-list>') 237
(221, 'ID') ('SHIFT', 222)
(221, '<atom>') 229
(221, '{') ('SHIFT', 162)
(221, '<full-conditional>') 253
(221, 'for') ('SHIFT', 163)
(221, '<inst-list>') 237
(221, '<inst>') 243
(221, '<var-asign>') 250
(221, '<factor>') 226
(221, '<inline-conditional>') 252
(221, 'if') ('SHIFT', 217)
(221, 'ID') ('SHIFT', 222)
(221, 'let') ('SHIFT', 170)
(221, 'if') ('SHIFT', 217)
(221, '<conditional>') 251
(221, 'if') ('SHIFT', 217)
(221, '<var-dec>') 246
(221, '<while-loop>') 254
(221, '(') ('SHIFT', 214)
(221, '<function-call>') 232
(221, '<scope>') 249
(221, '<inst>') 243
(221, '<flux-control>') 248
(221, 'while') ('SHIFT', 1)
(221, '<factor>') 226
(222, ':=') ('SHIFT', 223)
(222, '(') ('SHIFT', 209)
(222, ';') ('REDUCE', <atom> -> ID)
(222, '+') ('REDUCE', <atom> -> ID)
(222, '-') ('REDUCE', <atom> -> ID)
(222, '*') ('REDUCE', <atom> -> ID)
(222, '/') ('REDUCE', <atom> -> ID)
(222, '(') ('SHIFT', 209)
(223, '<aritmetic-operation>') 225
(223, '<atom>') 229
(223, '<expression>') 224
(223, '<factor>') 226
(223, '(') ('SHIFT', 214)
(223, 'ID') ('SHIFT', 208)
(223, '<atom>') 229
(223, '<function-call>') 232
(223, 'number') ('SHIFT', 213)
(223, '<atom>') 229
(223, 'ID') ('SHIFT', 208)
(223, 'ID') ('SHIFT', 208)
(223, '<factor>') 226
(223, '<factor>') 226
(224, ';') ('REDUCE', <var-asign> -> ID := <expression>)
(225, ';') ('REDUCE', <expression> -> <aritmetic-operation>)
(226, '-') ('SHIFT', 235)
(226, ';') ('REDUCE', <aritmetic-operation> -> <factor>)
(226, '+') ('SHIFT', 227)
(227, '<atom>') 229
(227, '<factor>') 226
(227, '(') ('SHIFT', 214)
(227, 'ID') ('SHIFT', 208)
(227, '<atom>') 229
(227, '<aritmetic-operation>') 228
(227, '<function-call>') 232
(227, 'number') ('SHIFT', 213)
(227, '<atom>') 229
(227, 'ID') ('SHIFT', 208)
(227, 'ID') ('SHIFT', 208)
(227, '<factor>') 226
(227, '<factor>') 226
(228, ';') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(229, '*') ('SHIFT', 230)
(229, ';') ('REDUCE', <factor> -> <atom>)
(229, '+') ('REDUCE', <factor> -> <atom>)
(229, '-') ('REDUCE', <factor> -> <atom>)
(229, '/') ('SHIFT', 233)
(230, '<atom>') 229
(230, '(') ('SHIFT', 214)
(230, 'ID') ('SHIFT', 208)
(230, '<atom>') 229
(230, '<function-call>') 232
(230, 'number') ('SHIFT', 213)
(230, '<atom>') 229
(230, 'ID') ('SHIFT', 208)
(230, 'ID') ('SHIFT', 208)
(230, '<factor>') 231
(231, ';') ('REDUCE', <factor> -> <atom> * <factor>)
(231, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(231, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(232, ';') ('REDUCE', <atom> -> <function-call>)
(232, '+') ('REDUCE', <atom> -> <function-call>)
(232, '-') ('REDUCE', <atom> -> <function-call>)
(232, '*') ('REDUCE', <atom> -> <function-call>)
(232, '/') ('REDUCE', <atom> -> <function-call>)
(233, '<atom>') 229
(233, '(') ('SHIFT', 214)
(233, 'ID') ('SHIFT', 208)
(233, '<atom>') 229
(233, '<function-call>') 232
(233, 'number') ('SHIFT', 213)
(233, '<factor>') 234
(233, '<atom>') 229
(233, 'ID') ('SHIFT', 208)
(233, 'ID') ('SHIFT', 208)
(234, ';') ('REDUCE', <factor> -> <atom> / <factor>)
(234, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(234, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(235, '<atom>') 229
(235, '<factor>') 226
(235, '(') ('SHIFT', 214)
(235, 'ID') ('SHIFT', 208)
(235, '<atom>') 229
(235, '<function-call>') 232
(235, 'number') ('SHIFT', 213)
(235, '<atom>') 229
(235, '<aritmetic-operation>') 236
(235, 'ID') ('SHIFT', 208)
(235, 'ID') ('SHIFT', 208)
(235, '<factor>') 226
(235, '<factor>') 226
(236, ';') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(237, '}') ('SHIFT', 238)
(237, '}') ('SHIFT', 238)
(238, 'else') ('SHIFT', 239)
(238, 'else') ('SHIFT', 239)
(238, '<else-statement>') 242
(238, ';') ('REDUCE', <full-conditional> -> if ( <conditional-expresssion> ) { <inst-list> })
(239, '<full-else>') 241
(239, '<inline-else>') 240
(240, ';') ('REDUCE', <else-statement> -> else <inline-else>)
(241, ';') ('REDUCE', <else-statement> -> else <full-else>)
(242, ';') ('REDUCE', <full-conditional> -> if ( <conditional-expresssion> ) { <inst-list> } <else-statement>)
(243, ';') ('SHIFT', 244)
(243, ';') ('SHIFT', 244)
(244, '<aritmetic-operation>') 225
(244, 'if') ('SHIFT', 217)
(244, '<inst-list>') 245
(244, 'number') ('SHIFT', 213)
(244, '{') ('SHIFT', 162)
(244, '<expression>') 247
(244, '<atom>') 229
(244, 'ID') ('SHIFT', 222)
(244, 'ID') ('SHIFT', 222)
(244, '<atom>') 229
(244, '<for-loop>') 255
(244, '<factor>') 226
(244, 'ID') ('SHIFT', 222)
(244, '<atom>') 229
(244, '{') ('SHIFT', 162)
(244, '<full-conditional>') 253
(244, 'for') ('SHIFT', 163)
(244, '<inst>') 243
(244, '<var-asign>') 250
(244, '<factor>') 226
(244, '<inline-conditional>') 252
(244, 'if') ('SHIFT', 217)
(244, 'ID') ('SHIFT', 222)
(244, 'let') ('SHIFT', 170)
(244, 'if') ('SHIFT', 217)
(244, '<conditional>') 251
(244, '}') ('REDUCE', <inst-list> -> <inst> ;)
(244, 'if') ('SHIFT', 217)
(244, '<var-dec>') 246
(244, '<while-loop>') 254
(244, '(') ('SHIFT', 214)
(244, '<function-call>') 232
(244, '<scope>') 249
(244, '<inst>') 243
(244, '<flux-control>') 248
(244, 'while') ('SHIFT', 1)
(244, '<factor>') 226
(245, '}') ('REDUCE', <inst-list> -> <inst> ; <inst-list>)
(246, ';') ('REDUCE', <inst> -> <var-dec>)
(247, ';') ('REDUCE', <inst> -> <expression>)
(248, ';') ('REDUCE', <inst> -> <flux-control>)
(249, ';') ('REDUCE', <inst> -> <scope>)
(250, ';') ('REDUCE', <inst> -> <var-asign>)
(251, ';') ('REDUCE', <flux-control> -> <conditional>)
(252, ';') ('REDUCE', <conditional> -> <inline-conditional>)
(253, ';') ('REDUCE', <conditional> -> <full-conditional>)
(254, ';') ('REDUCE', <flux-control> -> <while-loop>)
(255, ';') ('REDUCE', <flux-control> -> <for-loop>)
(256, ';') ('REDUCE', <atom> -> ID)
(256, '+') ('REDUCE', <atom> -> ID)
(256, '-') ('REDUCE', <atom> -> ID)
(256, '*') ('REDUCE', <atom> -> ID)
(256, '/') ('REDUCE', <atom> -> ID)
(256, 'else') ('REDUCE', <atom> -> ID)
(256, '(') ('SHIFT', 257)
(256, '(') ('SHIFT', 257)
(257, '(') ('SHIFT', 8)
(257, 'ID') ('SHIFT', 5)
(257, '<function-call>') 21
(257, '<atom>') 18
(257, '<expression>') 12
(257, '<param-list>') 259
(257, '<factor>') 15
(257, 'number') ('SHIFT', 7)
(257, '<expression>') 12
(257, ')') ('SHIFT', 258)
(257, '<atom>') 18
(257, 'ID') ('SHIFT', 5)
(257, '<factor>') 15
(257, '<factor>') 15
(257, 'ID') ('SHIFT', 5)
(257, '<atom>') 18
(257, '<aritmetic-operation>') 14
(258, ';') ('REDUCE', <function-call> -> ID ( ))
(258, '+') ('REDUCE', <function-call> -> ID ( ))
(258, '-') ('REDUCE', <function-call> -> ID ( ))
(258, '*') ('REDUCE', <function-call> -> ID ( ))
(258, '/') ('REDUCE', <function-call> -> ID ( ))
(258, 'else') ('REDUCE', <function-call> -> ID ( ))
(259, ')') ('SHIFT', 260)
(260, ';') ('REDUCE', <function-call> -> ID ( <param-list> ))
(260, '+') ('REDUCE', <function-call> -> ID ( <param-list> ))
(260, '-') ('REDUCE', <function-call> -> ID ( <param-list> ))
(260, '*') ('REDUCE', <function-call> -> ID ( <param-list> ))
(260, '/') ('REDUCE', <function-call> -> ID ( <param-list> ))
(260, 'else') ('REDUCE', <function-call> -> ID ( <param-list> ))
(261, ';') ('REDUCE', <atom> -> number)
(261, '+') ('REDUCE', <atom> -> number)
(261, '-') ('REDUCE', <atom> -> number)
(261, '*') ('REDUCE', <atom> -> number)
(261, '/') ('REDUCE', <atom> -> number)
(261, 'else') ('REDUCE', <atom> -> number)
(262, '<factor>') 33
(262, '<factor>') 33
(262, 'ID') ('SHIFT', 9)
(262, 'ID') ('SHIFT', 9)
(262, '<factor>') 33
(262, '<atom>') 36
(262, '(') ('SHIFT', 30)
(262, 'ID') ('SHIFT', 9)
(262, '<function-call>') 39
(262, '<atom>') 36
(262, '<aritmetic-operation>') 263
(262, '<atom>') 36
(262, 'number') ('SHIFT', 29)
(263, ')') ('SHIFT', 264)
(264, ';') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(264, '+') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(264, '-') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(264, '*') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(264, '/') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(264, 'else') ('REDUCE', <atom> -> ( <aritmetic-operation> ))
(265, 'else') ('SHIFT', 239)
(265, '<else-statement>') 266
(265, 'else') ('SHIFT', 239)
(265, ';') ('REDUCE', <inline-conditional> -> if ( <conditional-expresssion> ) <expression>)
(266, ';') ('REDUCE', <inline-conditional> -> if ( <conditional-expresssion> ) <expression> <else-statement>)
(267, ';') ('REDUCE', <expression> -> <aritmetic-operation>)
(267, 'else') ('REDUCE', <expression> -> <aritmetic-operation>)
(268, '+') ('SHIFT', 269)
(268, '-') ('SHIFT', 277)
(268, ';') ('REDUCE', <aritmetic-operation> -> <factor>)
(268, 'else') ('REDUCE', <aritmetic-operation> -> <factor>)
(269, 'ID') ('SHIFT', 256)
(269, 'ID') ('SHIFT', 256)
(269, '<factor>') 268
(269, '<factor>') 268
(269, '<atom>') 271
(269, '(') ('SHIFT', 262)
(269, '<factor>') 268
(269, 'ID') ('SHIFT', 256)
(269, '<atom>') 271
(269, '<function-call>') 274
(269, '<aritmetic-operation>') 270
(269, 'number') ('SHIFT', 261)
(269, '<atom>') 271
(270, ';') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(270, 'else') ('REDUCE', <aritmetic-operation> -> <factor> + <aritmetic-operation>)
(271, '/') ('SHIFT', 275)
(271, ';') ('REDUCE', <factor> -> <atom>)
(271, '+') ('REDUCE', <factor> -> <atom>)
(271, 'else') ('REDUCE', <factor> -> <atom>)
(271, '-') ('REDUCE', <factor> -> <atom>)
(271, '*') ('SHIFT', 272)
(272, 'ID') ('SHIFT', 256)
(272, 'ID') ('SHIFT', 256)
(272, '<atom>') 271
(272, '<factor>') 273
(272, '(') ('SHIFT', 262)
(272, 'ID') ('SHIFT', 256)
(272, '<atom>') 271
(272, '<function-call>') 274
(272, 'number') ('SHIFT', 261)
(272, '<atom>') 271
(273, ';') ('REDUCE', <factor> -> <atom> * <factor>)
(273, '+') ('REDUCE', <factor> -> <atom> * <factor>)
(273, 'else') ('REDUCE', <factor> -> <atom> * <factor>)
(273, '-') ('REDUCE', <factor> -> <atom> * <factor>)
(274, ';') ('REDUCE', <atom> -> <function-call>)
(274, '+') ('REDUCE', <atom> -> <function-call>)
(274, '-') ('REDUCE', <atom> -> <function-call>)
(274, '*') ('REDUCE', <atom> -> <function-call>)
(274, '/') ('REDUCE', <atom> -> <function-call>)
(274, 'else') ('REDUCE', <atom> -> <function-call>)
(275, 'ID') ('SHIFT', 256)
(275, '<factor>') 276
(275, 'ID') ('SHIFT', 256)
(275, '<atom>') 271
(275, '(') ('SHIFT', 262)
(275, 'ID') ('SHIFT', 256)
(275, '<atom>') 271
(275, '<function-call>') 274
(275, 'number') ('SHIFT', 261)
(275, '<atom>') 271
(276, ';') ('REDUCE', <factor> -> <atom> / <factor>)
(276, '+') ('REDUCE', <factor> -> <atom> / <factor>)
(276, 'else') ('REDUCE', <factor> -> <atom> / <factor>)
(276, '-') ('REDUCE', <factor> -> <atom> / <factor>)
(277, '<aritmetic-operation>') 278
(277, 'ID') ('SHIFT', 256)
(277, 'ID') ('SHIFT', 256)
(277, '<factor>') 268
(277, '<factor>') 268
(277, '<atom>') 271
(277, '(') ('SHIFT', 262)
(277, '<factor>') 268
(277, 'ID') ('SHIFT', 256)
(277, '<atom>') 271
(277, '<function-call>') 274
(277, 'number') ('SHIFT', 261)
(277, '<atom>') 271
(278, ';') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(278, 'else') ('REDUCE', <aritmetic-operation> -> <factor> - <aritmetic-operation>)
(279, ';') ('REDUCE', <var-decl-expr> -> <var-dec>)
(280, ';') ('REDUCE', <var-decl-expr> -> <expression>)
(281, ';') ('REDUCE', <var-decl-expr> -> <flux-control>)
(282, ';') ('REDUCE', <var-decl-expr> -> <scope>)
(283, ';') ('REDUCE', <var-dec> -> let <vat-init-list> in <var-decl-expr>)
(284, '}') ('SHIFT', 285)
(285, ';') ('REDUCE', <scope> -> { <inst-list> })
(286, ';') ('REDUCE', <while-loop> -> while ( <conditional-expresssion> ) <scope>)
(287, '$') ('OK', None)
(288, '$') ('REDUCE', <program> -> <inst-list>)
(289, ';') ('SHIFT', 290)
(289, ';') ('SHIFT', 290)
(290, '<aritmetic-operation>') 225
(290, 'if') ('SHIFT', 217)
(290, '<inst>') 289
(290, 'number') ('SHIFT', 213)
(290, '{') ('SHIFT', 162)
(290, '<expression>') 247
(290, '<atom>') 229
(290, 'ID') ('SHIFT', 222)
(290, 'ID') ('SHIFT', 222)
(290, '$') ('REDUCE', <inst-list> -> <inst> ;)
(290, '<atom>') 229
(290, '<for-loop>') 255
(290, '<factor>') 226
(290, 'ID') ('SHIFT', 222)
(290, '<atom>') 229
(290, '{') ('SHIFT', 162)
(290, '<full-conditional>') 253
(290, 'for') ('SHIFT', 163)
(290, '<inst>') 289
(290, '<var-asign>') 250
(290, '<factor>') 226
(290, '<inline-conditional>') 252
(290, 'if') ('SHIFT', 217)
(290, '<inst-list>') 291
(290, 'let') ('SHIFT', 170)
(290, 'ID') ('SHIFT', 222)
(290, 'if') ('SHIFT', 217)
(290, '<conditional>') 251
(290, 'if') ('SHIFT', 217)
(290, '<var-dec>') 246
(290, '<while-loop>') 254
(290, '(') ('SHIFT', 214)
(290, '<function-call>') 232
(290, '<scope>') 249
(290, '<flux-control>') 248
(290, 'while') ('SHIFT', 1)
(290, '<factor>') 226
(291, '$') ('REDUCE', <inst-list> -> <inst> ; <inst-list>)
[0] <---||---> ['let', 'ID', '=', 'number', ',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170] <---||---> ['ID', '=', 'number', ',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, 'ID', 171] <---||---> ['=', 'number', ',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<identifier>', 178] <---||---> ['=', 'number', ',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<identifier>', 178, '=', 179] <---||---> ['number', ',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<identifier>', 178, '=', 179, 'number', 187] <---||---> [',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<identifier>', 178, '=', 179, '<atom>', 196] <---||---> [',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<identifier>', 178, '=', 179, '<factor>', 193] <---||---> [',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<identifier>', 178, '=', 179, '<aritmetic-operation>', 192] <---||---> [',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<identifier>', 178, '=', 179, '<expression>', 204] <---||---> [',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175] <---||---> [',', 'ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176] <---||---> ['ID', '=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, 'ID', 171] <---||---> ['=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178] <---||---> ['=', 'number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179] <---||---> ['number', 'in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, 'number', 187] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<atom>', 196] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<aritmetic-operation>', 192] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<expression>', 204] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<var-init>', 175] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<var-init>', 175, ',', 176, '<vat-init-list>', 177] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206] <---||---> ['in', 'let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207] <---||---> ['let', 'ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170] <---||---> ['ID', '=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, 'ID', 171] <---||---> ['=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<identifier>', 178] <---||---> ['=', 'number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<identifier>', 178, '=', 179] <---||---> ['number', ',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<identifier>', 178, '=', 179, 'number', 187] <---||---> [',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<identifier>', 178, '=', 179, '<atom>', 196] <---||---> [',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<identifier>', 178, '=', 179, '<factor>', 193] <---||---> [',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<identifier>', 178, '=', 179, '<aritmetic-operation>', 192] <---||---> [',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<identifier>', 178, '=', 179, '<expression>', 204] <---||---> [',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175] <---||---> [',', 'ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176] <---||---> ['ID', '=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, 'ID', 171] <---||---> ['=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178] <---||---> ['=', 'number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179] <---||---> ['number', '+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, 'number', 187] <---||---> ['+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<atom>', 196] <---||---> ['+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193] <---||---> ['+', 'number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194] <---||---> ['number', '-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, 'number', 187] <---||---> ['-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<atom>', 196] <---||---> ['-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193] <---||---> ['-', '(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202] <---||---> ['(', 'number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188] <---||---> ['number', '*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, 'number', 29] <---||---> ['*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<atom>', 36] <---||---> ['*', 'number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<atom>', 36, '*', 37] <---||---> ['number', ')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<atom>', 36, '*', 37, 'number', 29] <---||---> [')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<atom>', 36, '*', 37, '<atom>', 36] <---||---> [')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<atom>', 36, '*', 37, '<factor>', 38] <---||---> [')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<factor>', 33] <---||---> [')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<aritmetic-operation>', 189] <---||---> [')', 'in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '(', 188, '<aritmetic-operation>', 189, ')', 190] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '<atom>', 196] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '<factor>', 193] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<factor>', 193, '-', 202, '<aritmetic-operation>', 203] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<factor>', 193, '+', 194, '<aritmetic-operation>', 195] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<aritmetic-operation>', 192] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<identifier>', 178, '=', 179, '<expression>', 204] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<var-init>', 175] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<var-init>', 175, ',', 176, '<vat-init-list>', 177] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206] <---||---> ['in', '{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207] <---||---> ['{', 'ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162] <---||---> ['ID', '(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222] <---||---> ['(', 'ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209] <---||---> ['ID', ')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209, 'ID', 5] <---||---> [')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209, '<atom>', 18] <---||---> [')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209, '<factor>', 15] <---||---> [')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209, '<aritmetic-operation>', 14] <---||---> [')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209, '<expression>', 12] <---||---> [')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209, '<param-list>', 211] <---||---> [')', ';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, 'ID', 222, '(', 209, '<param-list>', 211, ')', 212] <---||---> [';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<function-call>', 232] <---||---> [';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<atom>', 229] <---||---> [';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<factor>', 226] <---||---> [';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<aritmetic-operation>', 225] <---||---> [';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<expression>', 247] <---||---> [';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243] <---||---> [';', 'ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244] <---||---> ['ID', '(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222] <---||---> ['(', 'ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209] <---||---> ['ID', ')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209, 'ID', 5] <---||---> [')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209, '<atom>', 18] <---||---> [')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209, '<factor>', 15] <---||---> [')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209, '<aritmetic-operation>', 14] <---||---> [')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209, '<expression>', 12] <---||---> [')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209, '<param-list>', 211] <---||---> [')', ';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, 'ID', 222, '(', 209, '<param-list>', 211, ')', 212] <---||---> [';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<function-call>', 232] <---||---> [';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<atom>', 229] <---||---> [';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<factor>', 226] <---||---> [';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<aritmetic-operation>', 225] <---||---> [';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<expression>', 247] <---||---> [';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<inst>', 243] <---||---> [';', '}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<inst>', 243, ';', 244] <---||---> ['}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst>', 243, ';', 244, '<inst-list>', 245] <---||---> ['}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst-list>', 284] <---||---> ['}', ';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '{', 162, '<inst-list>', 284, '}', 285] <---||---> [';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '<scope>', 282] <---||---> [';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, 'let', 170, '<vat-init-list>', 206, 'in', 207, '<var-decl-expr>', 283] <---||---> [';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, '<var-dec>', 279] <---||---> [';', '$']
[0, 'let', 170, '<vat-init-list>', 206, 'in', 207, '<var-decl-expr>', 283] <---||---> [';', '$']
[0, '<var-dec>', 246] <---||---> [';', '$']
[0, '<inst>', 289] <---||---> [';', '$']
[0, '<inst>', 289, ';', 290] <---||---> ['$']
[0, '<inst-list>', 288] <---||---> ['$']
[0, '<program>', 287] <---||---> ['$']
[<identifier> -> ID, <atom> -> number, <factor> -> <atom>, <aritmetic-operation> -> <factor>, <expression> -> <aritmetic-operation>, <var-init> -> <identifier> = <expression>, <identifier> -> ID, <atom> -> number, <factor> -> <atom>, <aritmetic-operation> -> <factor>, <expression> -> <aritmetic-operation>, <var-init> -> <identifier> = <expression>, <vat-init-list> -> <var-init>, <vat-init-list> -> <var-init> , <vat-init-list>, <identifier> -> ID, <atom> -> number, <factor> -> <atom>, <aritmetic-operation> -> <factor>, <expression> -> <aritmetic-operation>, <var-init> -> <identifier> = <expression>, <identifier> -> ID, <atom> -> number, <factor> -> <atom>, <atom> -> number, <factor> -> <atom>, <atom> -> number, <atom> -> number, <factor> -> <atom>, <factor> -> <atom> * <factor>, <aritmetic-operation> -> <factor>, <atom> -> ( <aritmetic-operation> ), <factor> -> <atom>, <aritmetic-operation> -> <factor>, <aritmetic-operation> -> <factor> - <aritmetic-operation>, <aritmetic-operation> -> <factor> + <aritmetic-operation>, <expression> -> <aritmetic-operation>, <var-init> -> <identifier> = <expression>, <vat-init-list> -> <var-init>, <vat-init-list> -> <var-init> , <vat-init-list>, <atom> -> ID, <factor> -> <atom>, <aritmetic-operation> -> <factor>, <expression> -> <aritmetic-operation>, <param-list> -> <expression>, <function-call> -> ID ( <param-list> ), <atom> -> <function-call>, <factor> -> <atom>, <aritmetic-operation> -> <factor>, <expression> -> <aritmetic-operation>, <inst> -> <expression>, <atom> -> ID, <factor> -> <atom>, <aritmetic-operation> -> <factor>, <expression> -> <aritmetic-operation>, <param-list> -> <expression>, <function-call> -> ID ( <param-list> ), <atom> -> <function-call>, <factor> -> <atom>, <aritmetic-operation> -> <factor>, <expression> -> <aritmetic-operation>, <inst> -> <expression>, <inst-list> -> <inst> ;, <inst-list> -> <inst> ; <inst-list>, <scope> -> { <inst-list> }, <var-decl-expr> -> <scope>, <var-dec> -> let <vat-init-list> in <var-decl-expr>, <var-decl-expr> -> <var-dec>, <var-dec> -> let <vat-init-list> in <var-decl-expr>, <inst> -> <var-dec>, <inst-list> -> <inst> ;, <program> -> <inst-list>]
